{"version":3,"file":"canvas-renderer.service.d.ts","sources":["canvas-renderer.service.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { ComponentRef, ViewContainerRef } from '@angular/core';\r\nimport { NgFlowchart } from '../model/flow.model';\r\nimport { CanvasFlow } from '../ng-flowchart-canvas.service';\r\nimport { NgFlowchartStepComponent } from '../ng-flowchart-step/ng-flowchart-step.component';\r\nimport { OptionsService } from './options.service';\r\nexport declare type DropProximity = {\r\n    step: NgFlowchartStepComponent;\r\n    position: NgFlowchart.DropPosition;\r\n    proximity: number;\r\n};\r\nexport declare class CanvasRendererService {\r\n    private options;\r\n    private viewContainer;\r\n    private scale;\r\n    private scaleDebounceTimer;\r\n    constructor(options: OptionsService);\r\n    init(viewContainer: ViewContainerRef): void;\r\n    renderRoot(step: ComponentRef<NgFlowchartStepComponent>, dragEvent?: DragEvent): void;\r\n    renderNonRoot(step: ComponentRef<NgFlowchartStepComponent>, dragEvent?: DragEvent): void;\r\n    updatePosition(step: NgFlowchartStepComponent, dragEvent: DragEvent): void;\r\n    private getStepGap;\r\n    private renderChildTree;\r\n    render(flow: CanvasFlow, pretty?: boolean, skipAdjustDimensions?: boolean): void;\r\n    private resetAdjustDimensions;\r\n    private findDropLocationForHover;\r\n    private adjustDimensions;\r\n    private getTotalTreeWidth;\r\n    private findBestMatchForSteps;\r\n    findAndShowClosestDrop(dragStep: NgFlowchart.Step, event: DragEvent, steps: ReadonlyArray<NgFlowchartStepComponent>): NgFlowchart.DropTarget;\r\n    showSnaps(dragStep: NgFlowchart.PendingStep): void;\r\n    clearAllSnapIndicators(steps: ReadonlyArray<NgFlowchartStepComponent>): void;\r\n    private setRootPosition;\r\n    private getRelativeXY;\r\n    private getCanvasTopCenterPosition;\r\n    private getCanvasCenterPosition;\r\n    private getCanvasContentElement;\r\n    private isNestedCanvas;\r\n    resetScale(flow: CanvasFlow): void;\r\n    scaleUp(flow: CanvasFlow, step?: number): void;\r\n    scaleDown(flow: CanvasFlow, step?: number): void;\r\n    setScale(flow: CanvasFlow, scaleValue: number): void;\r\n}\r\n"]}