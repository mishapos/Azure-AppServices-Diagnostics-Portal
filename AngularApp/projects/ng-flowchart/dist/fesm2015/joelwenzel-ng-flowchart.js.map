{"version":3,"file":"joelwenzel-ng-flowchart.js","sources":["../../src/lib/model/flow.model.ts","../../src/lib/model/flowchart.constants.ts","../../src/lib/ng-flowchart-arrow/ng-flowchart-arrow.component.ts","../../src/lib/ng-flowchart-step/ng-flowchart-step.component.ts","../../src/lib/services/options.service.ts","../../src/lib/services/canvas-renderer.service.ts","../../src/lib/services/dropdata.service.ts","../../src/lib/ng-flowchart-step-registry.service.ts","../../src/lib/services/step-manager.service.ts","../../src/lib/ng-flowchart-canvas.service.ts","../../src/lib/ng-flowchart-canvas.directive.ts","../../src/lib/ng-flowchart-step.directive.ts","../../src/lib/ng-flowchart.module.ts","../../src/index.ts","../../src/joelwenzel-ng-flowchart.ts"],"sourcesContent":["import { TemplateRef, Type } from '@angular/core';\r\nimport { NgFlowchartCanvasService } from '../ng-flowchart-canvas.service';\r\nimport { NgFlowchartStepComponent } from '../ng-flowchart-step/ng-flowchart-step.component';\r\n\r\nexport namespace NgFlowchart {\r\n    export class Flow {\r\n        constructor(private canvas: NgFlowchartCanvasService) {\r\n\r\n        }\r\n\r\n        /**\r\n         * Returns the json representation of this flow\r\n         * @param indent Optional indent to specify for formatting\r\n         */\r\n        toJSON(indent?: number) {\r\n            return JSON.stringify(this.toObject(), null, indent);\r\n        }\r\n\r\n        toObject() {\r\n            return {\r\n                root: this.canvas.flow.rootStep?.toJSON()\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Create a flow and render it on the canvas from a json string\r\n         * @param json The json string of the flow to render\r\n         */\r\n        async upload(json: string | object): Promise<void> {\r\n            let jsonObj = typeof json === 'string' ? JSON.parse(json) : json\r\n            let root: any = jsonObj.root;\r\n            this.clear();\r\n\r\n            await this.canvas.upload(root);\r\n        }\r\n\r\n        /**\r\n         * Returns the root step of the flow chart\r\n         */\r\n        getRoot(): NgFlowchartStepComponent {\r\n            return this.canvas.flow.rootStep;\r\n        }\r\n\r\n        /**\r\n         * Finds a step in the flow chart by a given id\r\n         * @param id Id of the step to find. By default, the html id of the step\r\n         */\r\n        getStep(id): NgFlowchartStepComponent {\r\n            return this.canvas.flow.steps.find(child => child.id == id);\r\n        }\r\n\r\n        /**\r\n         * Re-renders the canvas. Generally this should only be used in rare circumstances\r\n         * @param pretty Attempt to recenter the flow in the canvas\r\n         */\r\n        render(pretty?: boolean) {\r\n            this.canvas.reRender(pretty);\r\n        }\r\n\r\n        /**\r\n         * Clears all flow chart, reseting the current canvas\r\n         */\r\n        clear() {\r\n            if (this.canvas.flow?.rootStep) {\r\n                this.canvas.flow.rootStep.destroy(true, false);\r\n                this.canvas.reRender();\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    export class Options {\r\n        /** The gap (in pixels) between flow steps*/\r\n        stepGap?: number = 40;\r\n\r\n        /** An inner deadzone radius (in pixels) that will not register the hover icon  */\r\n        hoverDeadzoneRadius?: number = 20;\r\n\r\n        /** Is the flow sequential? If true, then you will not be able to drag parallel steps */\r\n        isSequential?: boolean = false;\r\n\r\n        /** The default root position when dropped. Default is TOP_CENTER */\r\n        rootPosition?: 'TOP_CENTER' | 'CENTER' | 'FREE' = 'TOP_CENTER';\r\n\r\n        /** Should the canvas be centered when a resize is detected? */\r\n        centerOnResize?: boolean = true;\r\n\r\n        /** Canvas zoom options. Defaults to mouse wheel zoom */\r\n        zoom?: {\r\n            mode: 'WHEEL' | 'MANUAL' | 'DISABLED'\r\n            defaultStep?: number\r\n        } = {\r\n            mode: 'WHEEL',\r\n            defaultStep: .1\r\n        }\r\n    }\r\n\r\n    export type DropEvent = {\r\n        step: NgFlowchartStepComponent,\r\n        parent?: NgFlowchartStepComponent,\r\n        isMove: boolean\r\n    }\r\n\r\n    export type DropError = {\r\n        step: PendingStep,\r\n        parent?: NgFlowchartStepComponent,\r\n        error: ErrorMessage\r\n    }\r\n\r\n    export type MoveError = {\r\n        step: MoveStep,\r\n        parent?: NgFlowchartStepComponent,\r\n        error: ErrorMessage\r\n    }\r\n\r\n    export type ErrorMessage = {\r\n        code?: string,\r\n        message?: string\r\n    }\r\n\r\n    export interface MoveStep extends Step {\r\n        instance: NgFlowchartStepComponent\r\n    }\r\n\r\n    export interface PendingStep extends Step {\r\n        /**\r\n         * An Ng-template containing the canvas content to be displayed. \r\n         * Or a component type that extends NgFlowchartStepComponent\r\n         */\r\n        template: TemplateRef<any> | Type<NgFlowchartStepComponent>\r\n    }\r\n\r\n    export interface Step {\r\n        /**\r\n         * A unique string indicating the type of step this is.\r\n         * This type will be used to register steps if you are uploading from json.\r\n         */\r\n        type: string,\r\n        /**\r\n         * Optional data to give the step. Typically configuration data that users can edit on the step.\r\n         */\r\n        data?: any\r\n    }\r\n\r\n\r\n\r\n    export type DropTarget = {\r\n        step: NgFlowchartStepComponent,\r\n        position: DropPosition\r\n    }\r\n\r\n    export type DropStatus = 'SUCCESS' | 'PENDING' | 'FAILED';\r\n    export type DropPosition = 'RIGHT' | 'LEFT' | 'BELOW' | 'ABOVE';\r\n\r\n    export type Callbacks = {\r\n\r\n        /**\r\n         * Called when user drops a new step from the palette or moves an existing step\r\n         */\r\n        onDropStep?: (drop: DropEvent) => void;\r\n\r\n        /**\r\n         * Called when the delete method has been called on the step\r\n         */\r\n        beforeDeleteStep?: (step: NgFlowchartStepComponent) => void;\r\n\r\n        /**\r\n         * Called after the delete method has run on the step. If you need to access\r\n         * step children or parents, use beforeDeleteStep\r\n         */\r\n        afterDeleteStep?: (step: NgFlowchartStepComponent) => void;\r\n\r\n        /**\r\n         * Called when a new step fails to drop on the canvas\r\n         */\r\n        onDropError?: (drop: DropError) => void;\r\n\r\n        /**\r\n         * Called when an existing step fails to move\r\n         */\r\n        onMoveError?: (drop: MoveError) => void;\r\n\r\n        /**\r\n         * Called before the canvas is about to re-render\r\n         */\r\n        beforeRender?: () => void\r\n\r\n        /**\r\n         * Called after the canvas completes a re-render\r\n         */\r\n        afterRender?: () => void        \r\n\r\n        /**\r\n         * Called after the canvas has been scaled\r\n         */\r\n        afterScale?: (newScale: number) => void\r\n    };\r\n}\r\n\r\n\r\n\r\n\r\n","export const CONSTANTS = {\r\n    DROP_HOVER_ATTR: 'ngflowchart-drop-hover',\r\n    CANVAS_CONTENT_CLASS: 'ngflowchart-canvas-content',\r\n    CANVAS_CONTENT_ID: 'ngflowchart-canvas-content',\r\n    CANVAS_CLASS: 'ngflowchart-canvas',\r\n    CANVAS_STEP_CLASS: 'ngflowchart-canvas-step',\r\n}","import { AfterViewInit, Component, ElementRef, Input, OnInit, ViewChild } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'lib-ng-flowchart-arrow',\r\n  templateUrl: './ng-flowchart-arrow.component.html',\r\n  styleUrls: ['./ng-flowchart-arrow.component.scss']\r\n})\r\nexport class NgFlowchartArrowComponent implements OnInit, AfterViewInit {\r\n\r\n  @ViewChild('arrow')\r\n  arrow: ElementRef;\r\n\r\n  @Input()\r\n  set position(pos: { start: number[], end: number[] }) {\r\n    this._position = pos;\r\n\r\n    this.isLeftFlowing = pos.start[0] > pos.end[0];\r\n\r\n    //in the case where steps are directly underneath we need some minimum width\r\n    this.containerWidth = Math.abs(pos.start[0] - pos.end[0]) + (this.padding * 2);\r\n\r\n    this.containerLeft = Math.min(pos.start[0], pos.end[0]) - this.padding;\r\n\r\n    this.containerHeight = Math.abs(pos.start[1] - pos.end[1]);\r\n    this.containerTop = pos.start[1];\r\n\r\n    this.updatePath();\r\n  }\r\n\r\n  opacity = 1;\r\n  containerWidth: number = 0;\r\n  containerHeight: number = 0;\r\n  containerLeft: number = 0;\r\n  containerTop: number = 0;\r\n  _position: { start: number[], end: number[] }\r\n\r\n\r\n  //to be applied on left and right edges\r\n  private padding = 10;\r\n  private isLeftFlowing = false;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.updatePath();\r\n  }\r\n\r\n  hideArrow() {\r\n    this.opacity = .2;\r\n  }\r\n\r\n  showArrow() {\r\n    this.opacity = 1;\r\n  }\r\n\r\n  private updatePath() {\r\n    if (!this.arrow?.nativeElement) {\r\n      return;\r\n    }\r\n\r\n    if (this.isLeftFlowing) {\r\n      this.arrow.nativeElement.setAttribute(\"d\", `\r\n        M${this.containerWidth - this.padding},0 \r\n        L${this.containerWidth - this.padding},${this.containerHeight / 2}\r\n        L${this.padding},${this.containerHeight / 2}\r\n        L${this.padding},${this.containerHeight - 4}\r\n      `);\r\n    }\r\n    else {\r\n      this.arrow.nativeElement.setAttribute(\"d\", `\r\n        M${this.padding},0 \r\n        L${this.padding},${this.containerHeight / 2}\r\n        L${this.containerWidth - this.padding},${this.containerHeight / 2}\r\n        L${this.containerWidth - this.padding},${this.containerHeight - 4}\r\n      `);\r\n    }\r\n\r\n\r\n  }\r\n\r\n}\r\n","import { Component, ComponentFactoryResolver, ComponentRef, ElementRef, EventEmitter, HostListener, Input, Output, TemplateRef, ViewChild, ViewContainerRef, ViewEncapsulation } from '@angular/core';\r\nimport { NgFlowchart } from '../model/flow.model';\r\nimport { CONSTANTS } from '../model/flowchart.constants';\r\nimport { NgFlowchartArrowComponent } from '../ng-flowchart-arrow/ng-flowchart-arrow.component';\r\nimport { NgFlowchartCanvasService } from '../ng-flowchart-canvas.service';\r\nimport { DropDataService } from '../services/dropdata.service';\r\n\r\nexport type AddChildOptions = {\r\n  /** Should the child be added as a sibling to existing children, if false the existing children will be reparented to this new child.\r\n   * Default is true.\r\n   * */\r\n  sibling?: boolean,\r\n  /** The index of the child. Only used when sibling is true.\r\n   * Defaults to the end of the child array. \r\n   */\r\n  index?: number\r\n}\r\n\r\n@Component({\r\n  selector: 'ng-flowchart-step',\r\n  templateUrl: './ng-flowchart-step.component.html',\r\n  styleUrls: ['./ng-flowchart-step.component.scss'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class NgFlowchartStepComponent<T = any> {\r\n\r\n  @HostListener('dragstart', ['$event'])\r\n  onMoveStart(event: DragEvent) {\r\n    if (this.canvas.disabled) { return; }\r\n    this.hideTree();\r\n    event.dataTransfer.setData('type', 'FROM_CANVAS');\r\n    event.dataTransfer.setData('id', this.nativeElement.id);\r\n\r\n\r\n    this.drop.dragStep = {\r\n      type: this.type,\r\n      data: this.data,\r\n      instance: this\r\n    }\r\n  }\r\n\r\n  @HostListener('dragend', ['$event'])\r\n  onMoveEnd(event: DragEvent) {\r\n    this.showTree();\r\n  }\r\n\r\n  //could potentially try to make this abstract\r\n  @ViewChild('canvasContent')\r\n  protected view: ElementRef;\r\n\r\n  @Input()\r\n  data: T;\r\n\r\n  @Input()\r\n  type: string;\r\n\r\n  @Input()\r\n  canvas: NgFlowchartCanvasService;\r\n\r\n  @Input()\r\n  compRef: ComponentRef<NgFlowchartStepComponent>;\r\n\r\n  @Output()\r\n  viewInit = new EventEmitter();\r\n\r\n  @Input()\r\n  contentTemplate: TemplateRef<any>;\r\n\r\n\r\n  private _id: any;\r\n  private _currentPosition = [0, 0];\r\n\r\n  //only used if something tries to set the position before view has been initialized\r\n  private _initPosition;\r\n  private _isHidden = false;\r\n  private _parent: NgFlowchartStepComponent;\r\n  private _children: Array<NgFlowchartStepComponent>;\r\n  private arrow: ComponentRef<NgFlowchartArrowComponent>;\r\n\r\n  private drop: DropDataService;\r\n  private viewContainer: ViewContainerRef;\r\n  private compFactory: ComponentFactoryResolver;\r\n\r\n  constructor() {\r\n    this._children = [];\r\n  }\r\n\r\n  init(drop, viewContainer, compFactory) {\r\n    this.drop = drop;\r\n    this.viewContainer = viewContainer;\r\n    this.compFactory = compFactory;\r\n  }\r\n\r\n  canDeleteStep(): boolean {\r\n    return true;\r\n  }\r\n\r\n  canDrop(dropEvent: NgFlowchart.DropTarget, error: NgFlowchart.ErrorMessage): boolean {\r\n    return true;\r\n  }\r\n\r\n  shouldEvalDropHover(coords: number[], stepToDrop: NgFlowchart.Step): boolean {\r\n    return true\r\n  }\r\n\r\n  async onUpload(data: T) { }\r\n\r\n  getDropPositionsForStep(step: NgFlowchart.Step): NgFlowchart.DropPosition[] {\r\n    return ['BELOW', 'LEFT', 'RIGHT', 'ABOVE'];\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    if (!this.nativeElement) {\r\n      throw 'Missing canvasContent ViewChild. Be sure to add #canvasContent to your root html element.'\r\n    }\r\n\r\n\r\n    this.nativeElement.classList.add('ngflowchart-step-wrapper');\r\n    this.nativeElement.setAttribute('draggable', 'true');\r\n\r\n    if (this._initPosition) {\r\n      this.zsetPosition(this._initPosition);\r\n    }\r\n\r\n    //force id creation if not already there\r\n    this.nativeElement.id = this.id;\r\n\r\n    this.viewInit.emit();\r\n  }\r\n\r\n  get id() {\r\n    if (this._id == null) {\r\n      this._id = 's' + Date.now();\r\n    }\r\n    return this._id;\r\n  }\r\n\r\n  get currentPosition() {\r\n    return this._currentPosition;\r\n  }\r\n\r\n  /**\r\n   * Creates and adds a child to this step\r\n   * @param template The template or component type to create\r\n   * @param options Add options \r\n   */\r\n  async addChild(pending: NgFlowchart.PendingStep, options: AddChildOptions): Promise<NgFlowchartStepComponent | null> {\r\n\r\n    let componentRef = await this.canvas.createStep(pending);\r\n    this.canvas.addToCanvas(componentRef);\r\n    if (options?.sibling) {\r\n      this.zaddChildSibling0(componentRef.instance, options?.index);\r\n    }\r\n    else {\r\n      this.zaddChild0(componentRef.instance);\r\n    }\r\n\r\n    this.canvas.flow.addStep(componentRef.instance);\r\n\r\n    this.canvas.reRender();\r\n\r\n    return componentRef.instance;\r\n  }\r\n\r\n  /**\r\n   * Destroys this step component and updates all necessary child and parent relationships\r\n   * @param recursive \r\n   * @param checkCallbacks \r\n   */\r\n  destroy(recursive: boolean = true, checkCallbacks: boolean = true): boolean {\r\n\r\n    if (!checkCallbacks || this.canDeleteStep()) {\r\n      this.canvas.options.callbacks.beforeDeleteStep && \r\n      this.canvas.options.callbacks.beforeDeleteStep(this)\r\n      \r\n      let parentIndex;\r\n      if (this._parent) {\r\n        parentIndex = this._parent.removeChild(this);\r\n      }\r\n\r\n      this.destroy0(parentIndex, recursive);\r\n\r\n      this.canvas.reRender();\r\n\r\n      this.canvas.options.callbacks.afterDeleteStep && \r\n      this.canvas.options.callbacks.afterDeleteStep(this)\r\n\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * Remove a child from this step. Returns the index at which the child was found or -1 if not found.\r\n   * @param childToRemove Step component to remove\r\n   */\r\n  removeChild(childToRemove: NgFlowchartStepComponent): number {\r\n    if (!this.children) {\r\n      return -1;\r\n    }\r\n    const i = this.children.findIndex(child => child.id == childToRemove.id);\r\n    if (i > -1) {\r\n      this.children.splice(i, 1);\r\n    }\r\n\r\n    return i;\r\n  }\r\n\r\n  /**\r\n   * Re-parent this step\r\n   * @param newParent The new parent for this step\r\n   * @param force Force the re-parent if a parent already exists\r\n   */\r\n  setParent(newParent: NgFlowchartStepComponent, force: boolean = false): void {\r\n    if (this.parent && !force) {\r\n      console.warn('This child already has a parent, use force if you know what you are doing');\r\n      return;\r\n    }\r\n    this._parent = newParent;\r\n    if (!this._parent && this.arrow) {\r\n      this.arrow.destroy();\r\n      this.arrow = null;\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * Called when no longer trying to drop or move a step adjacent to this one\r\n   * @param position Position to render the icon\r\n   */\r\n  clearHoverIcons() {\r\n    this.nativeElement.removeAttribute(CONSTANTS.DROP_HOVER_ATTR);\r\n  }\r\n\r\n  /**\r\n   * Called when a step is trying to be dropped or moved adjacent to this step.\r\n   * @param position Position to render the icon\r\n   */\r\n  showHoverIcon(position: NgFlowchart.DropPosition) {\r\n    this.nativeElement.setAttribute(CONSTANTS.DROP_HOVER_ATTR, position.toLowerCase());\r\n  }\r\n\r\n  /**\r\n   * Is this the root element of the tree\r\n   */\r\n  isRootElement() {\r\n    return !this.parent;\r\n  }\r\n\r\n  /**\r\n   * Does this step have any children?\r\n   * @param count Optional count of children to check. Defaults to 1. I.E has at least 1 child.\r\n   */\r\n  hasChildren(count: number = 1) {\r\n    return this.children && this.children.length >= count;\r\n  }\r\n\r\n  /** Array of children steps for this step */\r\n  get children() {\r\n    return this._children;\r\n  }\r\n\r\n  /** The parent step of this step */\r\n  get parent() {\r\n    return this._parent;\r\n  }\r\n\r\n  /**\r\n   * Returns the total width extent (in pixels) of this node tree\r\n   * @param stepGap The current step gap for the flow canvas\r\n   */\r\n  getNodeTreeWidth(stepGap: number) {\r\n    const currentNodeWidth = this.nativeElement.getBoundingClientRect().width;\r\n\r\n    if (!this.hasChildren()) {\r\n      return this.nativeElement.getBoundingClientRect().width;\r\n    }\r\n\r\n    let childWidth = this._children.reduce((childTreeWidth, child) => {\r\n      return childTreeWidth += child.getNodeTreeWidth(stepGap);\r\n    }, 0)\r\n\r\n    childWidth += stepGap * (this._children.length - 1);\r\n\r\n    return Math.max(currentNodeWidth, childWidth);\r\n  }\r\n\r\n  /**\r\n   * Is this step currently hidden and unavailable as a drop location\r\n   */\r\n  isHidden() {\r\n    return this._isHidden;\r\n  }\r\n\r\n  /**\r\n   * Return current rect of this step. The position can be animated so getBoundingClientRect cannot \r\n   * be reliable for positions\r\n   * @param canvasRect Optional canvasRect to provide to offset the values\r\n   */\r\n  getCurrentRect(canvasRect?: DOMRect): Partial<DOMRect> {\r\n    let clientRect = this.nativeElement.getBoundingClientRect();\r\n\r\n    return {\r\n      bottom: this._currentPosition[1] + clientRect.height + (canvasRect?.top || 0),\r\n      left: this._currentPosition[0] + (canvasRect?.left || 0),\r\n      height: clientRect.height,\r\n      width: clientRect.width,\r\n      right: this._currentPosition[0] + clientRect.width + (canvasRect?.left || 0),\r\n      top: this._currentPosition[1] + (canvasRect?.top || 0)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Returns the JSON representation of this flow step\r\n   */\r\n  toJSON() {\r\n    return {\r\n      id: this.id,\r\n      type: this.type,\r\n      data: this.data,\r\n      children: this.hasChildren() ? this._children.map(child => {\r\n        return child.toJSON()\r\n      }) : []\r\n    }\r\n  }\r\n\r\n  /** The native HTMLElement of this step */\r\n  get nativeElement(): HTMLElement {\r\n    return this.view?.nativeElement;\r\n  }\r\n\r\n  setId(id) {\r\n    this._id = id;\r\n  }\r\n\r\n  zsetPosition(pos: number[], offsetCenter: boolean = false) {\r\n\r\n    if (!this.view) {\r\n      console.warn('Trying to set position before view init');\r\n      //save pos and set in after view init\r\n      this._initPosition = [...pos];\r\n      return;\r\n    }\r\n\r\n    let adjustedX = Math.max(pos[0] - (offsetCenter ? this.nativeElement.offsetWidth / 2 : 0), 0);\r\n    let adjustedY = Math.max(pos[1] - (offsetCenter ? this.nativeElement.offsetHeight / 2 : 0), 0);\r\n\r\n    this.nativeElement.style.left = `${adjustedX}px`;\r\n    this.nativeElement.style.top = `${adjustedY}px`;\r\n\r\n    this._currentPosition = [adjustedX, adjustedY];\r\n  }\r\n\r\n  zaddChild0(newChild: NgFlowchartStepComponent): boolean {\r\n    let oldChildIndex = null\r\n    if (newChild._parent) {\r\n      oldChildIndex = newChild._parent.removeChild(newChild);\r\n    }\r\n\r\n    if (this.hasChildren()) {\r\n      if (newChild.hasChildren()) {\r\n        //if we have children and the child has children we need to confirm the child doesnt have multiple children at any point\r\n        let newChildLastChild = newChild.findLastSingleChild();\r\n        if (!newChildLastChild) {\r\n          newChild._parent.zaddChildSibling0(newChild, oldChildIndex)\r\n          console.error('Invalid move. A node cannot have multiple parents');\r\n          return false;\r\n        }\r\n        //move the this nodes children to last child of the step arg\r\n        newChildLastChild.setChildren(this._children.slice());\r\n      }\r\n      else {\r\n        //move adjacent's children to newStep\r\n        newChild.setChildren(this._children.slice());\r\n      }\r\n\r\n    }\r\n    //finally reset this nodes to children to the single new child\r\n    this.setChildren([newChild]);\r\n    return true;\r\n  }\r\n\r\n  zaddChildSibling0(child: NgFlowchartStepComponent, index?: number): void {\r\n    if (child._parent) {\r\n      child._parent.removeChild(child);\r\n    }\r\n\r\n    if (!this.children) {\r\n      this._children = [];\r\n    }\r\n    if (index == null) {\r\n      this.children.push(child);\r\n    }\r\n    else {\r\n      this.children.splice(index, 0, child);\r\n    }\r\n\r\n    //since we are adding a new child here, it is safe to force set the parent\r\n    child.setParent(this, true);\r\n  }\r\n\r\n  zdrawArrow(start: number[], end: number[]) {\r\n    if (!this.arrow) {\r\n      this.createArrow();\r\n    }\r\n    this.arrow.instance.position = {\r\n      start: start,\r\n      end: end\r\n    };\r\n  }\r\n\r\n  ////////////////////////\r\n  // PRIVATE IMPL\r\n\r\n  private destroy0(parentIndex, recursive: boolean = true) {\r\n\r\n    this.compRef.destroy();\r\n    \r\n    // remove from master array\r\n    this.canvas.flow.removeStep(this)\r\n\r\n    if (this.isRootElement()) {\r\n      this.canvas.flow.rootStep = null;\r\n    }\r\n\r\n    if (this.hasChildren()) {\r\n\r\n      //this was the root node\r\n      if (this.isRootElement()) {\r\n\r\n        if (!recursive) {\r\n\r\n          let newRoot = this._children[0];\r\n          //set first child as new root\r\n          this.canvas.flow.rootStep = newRoot;\r\n          newRoot.setParent(null, true);\r\n\r\n          //make previous siblings children of the new root\r\n          if (this.hasChildren(2)) {\r\n            for (let i = 1; i < this._children.length; i++) {\r\n              let child = this._children[i];\r\n              child.setParent(newRoot, true);\r\n              newRoot._children.push(child);\r\n            }\r\n          }\r\n        }\r\n\r\n      }\r\n\r\n      //update children\r\n      let length = this._children.length;\r\n      for (let i = 0; i < length; i++) {\r\n        let child = this._children[i];\r\n        if (recursive) {\r\n          (child as NgFlowchartStepComponent).destroy0(null, true);\r\n        }\r\n\r\n        //not the original root node\r\n        else if (!!this._parent) {\r\n          this._parent._children.splice(i + parentIndex, 0, child);\r\n          child.setParent(this._parent, true);\r\n        }\r\n      }\r\n      this.setChildren([]);\r\n    }\r\n    this._parent = null;\r\n  }\r\n\r\n  private createArrow() {\r\n    const factory = this.compFactory.resolveComponentFactory(NgFlowchartArrowComponent)\r\n    this.arrow = this.viewContainer.createComponent(factory);\r\n    this.nativeElement.parentElement.appendChild(this.arrow.location.nativeElement);\r\n  }\r\n\r\n  private hideTree() {\r\n    this._isHidden = true;\r\n    this.nativeElement.style.opacity = '.4';\r\n\r\n    if (this.arrow) {\r\n      this.arrow.instance.hideArrow();\r\n    }\r\n\r\n    if (this.hasChildren()) {\r\n      this._children.forEach(child => {\r\n        child.hideTree();\r\n      })\r\n    }\r\n  }\r\n\r\n  private showTree() {\r\n    this._isHidden = false;\r\n\r\n    if (this.arrow) {\r\n      this.arrow.instance.showArrow();\r\n    }\r\n\r\n    this.nativeElement.style.opacity = '1';\r\n    if (this.hasChildren()) {\r\n      this._children.forEach(child => {\r\n        child.showTree();\r\n      })\r\n    }\r\n  }\r\n\r\n  private findLastSingleChild() {\r\n    //two or more children means we have no single child\r\n    if (this.hasChildren(2)) {\r\n      return null;\r\n    }\r\n    //if one child.. keep going down the tree until we find no children or 2 or more\r\n    else if (this.hasChildren()) {\r\n      return this._children[0].findLastSingleChild();\r\n    }\r\n    //if no children then this is the last single child\r\n    else return this;\r\n  }\r\n\r\n  private setChildren(children: Array<NgFlowchartStepComponent>): void {\r\n    this._children = children;\r\n    this.children.forEach(child => {\r\n      child.setParent(this, true);\r\n    })\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { NgFlowchart } from '../model/flow.model';\r\n\r\n@Injectable()\r\nexport class OptionsService {\r\n\r\n    private _options: NgFlowchart.Options;\r\n    private _callbacks: NgFlowchart.Callbacks = {};\r\n\r\n    constructor() {\r\n        this._options = new NgFlowchart.Options();\r\n    }\r\n\r\n    setOptions(options) {\r\n        this._options = this.sanitizeOptions(options);        \r\n    }\r\n\r\n    setCallbacks(callbacks) {\r\n        this._callbacks = callbacks;\r\n    }\r\n\r\n    get options() {\r\n        return this._options;\r\n    }\r\n\r\n    get callbacks() {\r\n        return this._callbacks;\r\n    }\r\n\r\n    private sanitizeOptions(options: NgFlowchart.Options): NgFlowchart.Options {\r\n        const defaultOpts = new NgFlowchart.Options();\r\n\r\n        options = {\r\n          ...defaultOpts,\r\n          ...options\r\n        };\r\n    \r\n        options.stepGap = Math.max(options.stepGap, 20) || 40;\r\n        options.hoverDeadzoneRadius = Math.max(options.hoverDeadzoneRadius, 0) || 20;\r\n    \r\n        return options;\r\n    }\r\n}","import { ComponentRef, Injectable, ViewContainerRef } from '@angular/core';\r\nimport { NgFlowchart } from '../model/flow.model';\r\nimport { CONSTANTS } from '../model/flowchart.constants';\r\nimport { CanvasFlow } from '../ng-flowchart-canvas.service';\r\nimport { NgFlowchartStepComponent } from '../ng-flowchart-step/ng-flowchart-step.component';\r\nimport { OptionsService } from './options.service';\r\n\r\nexport type DropProximity = {\r\n    step: NgFlowchartStepComponent,\r\n    position: NgFlowchart.DropPosition,\r\n    proximity: number\r\n};\r\n\r\n@Injectable()\r\nexport class CanvasRendererService {\r\n    private viewContainer: ViewContainerRef;\r\n\r\n    private scale: number = 1;\r\n    private scaleDebounceTimer = null\r\n\r\n    constructor(\r\n        private options: OptionsService\r\n    ) {\r\n\r\n    }\r\n\r\n    public init(viewContainer: ViewContainerRef) {\r\n        this.viewContainer = viewContainer;\r\n    }\r\n\r\n    public renderRoot(step: ComponentRef<NgFlowchartStepComponent>, dragEvent?: DragEvent) {\r\n        this.getCanvasContentElement().appendChild((step.location.nativeElement));\r\n        this.setRootPosition(step.instance, dragEvent);\r\n    }\r\n\r\n    public renderNonRoot(step: ComponentRef<NgFlowchartStepComponent>, dragEvent?: DragEvent) {\r\n        this.getCanvasContentElement().appendChild((step.location.nativeElement));\r\n    }\r\n\r\n    public updatePosition(step: NgFlowchartStepComponent, dragEvent: DragEvent) {\r\n        let relativeXY = this.getRelativeXY(dragEvent);\r\n\r\n        relativeXY = relativeXY.map(coord => coord / this.scale)\r\n        step.zsetPosition(relativeXY, true);\r\n    }\r\n\r\n    private getStepGap() {\r\n        return this.options.options.stepGap;\r\n    }\r\n\r\n    private renderChildTree(rootNode: NgFlowchartStepComponent, rootRect: Partial<DOMRect>, canvasRect: DOMRect) {\r\n        //the rootNode passed in is already rendered. just need to render its children /subtree\r\n\r\n        if (!rootNode.hasChildren()) {\r\n            return;\r\n        }\r\n\r\n        //top of the child row is simply the relative bottom of the root + stepGap\r\n        const childYTop = (rootRect.bottom - canvasRect.top * this.scale) + this.getStepGap();\r\n  \r\n        const rootWidth = rootRect.width / this.scale\r\n\r\n        const rootXCenter = (rootRect.left - canvasRect.left) + (rootWidth / 2);\r\n\r\n\r\n        //get the width of the child trees\r\n        let childTreeWidths = {};\r\n        let totalTreeWidth = 0;\r\n\r\n        rootNode.children.forEach(child => {\r\n            let totalChildWidth = child.getNodeTreeWidth(this.getStepGap());\r\n            totalChildWidth = totalChildWidth / this.scale\r\n            childTreeWidths[child.nativeElement.id] = totalChildWidth;\r\n\r\n            totalTreeWidth += totalChildWidth;\r\n        });\r\n\r\n        //add length for stepGaps between child trees\r\n        totalTreeWidth += (rootNode.children.length - 1) * this.getStepGap();\r\n\r\n        //if we have more than 1 child, we want half the extent on the left and half on the right\r\n        let leftXTree = rootXCenter - (totalTreeWidth / 2);\r\n        \r\n        // dont allow it to go negative since you cant scroll that way\r\n        leftXTree = Math.max(0, leftXTree)\r\n\r\n        rootNode.children.forEach(child => {\r\n\r\n            let childExtent = childTreeWidths[child.nativeElement.id];\r\n\r\n            let childLeft = leftXTree + (childExtent / 2) - (child.nativeElement.offsetWidth / 2);\r\n\r\n\r\n            child.zsetPosition([childLeft, childYTop]);\r\n\r\n            const currentChildRect = child.getCurrentRect(canvasRect);\r\n\r\n            const childWidth = currentChildRect.width / this.scale\r\n           \r\n            child.zdrawArrow(\r\n                [rootXCenter, (rootRect.bottom - canvasRect.top * this.scale)],\r\n                [currentChildRect.left + childWidth / 2 - canvasRect.left, currentChildRect.top - canvasRect.top]\r\n            );\r\n\r\n            this.renderChildTree(child, currentChildRect, canvasRect);\r\n            leftXTree += childExtent + this.getStepGap();\r\n        })\r\n\r\n    }\r\n\r\n\r\n    public render(flow: CanvasFlow, pretty?: boolean, skipAdjustDimensions = false) {\r\n        if (!flow.hasRoot()) {\r\n            if (this.options.options.zoom.mode === 'DISABLED') {\r\n                this.resetAdjustDimensions();\r\n                // Trigger afterRender to allow nested canvas to redraw parent canvas.\r\n                // Not sure if this scenario should also trigger beforeRender.\r\n                if (this.options.callbacks?.afterRender) {\r\n                    this.options.callbacks.afterRender()\r\n                }\r\n            }\r\n            return;\r\n        }\r\n\r\n        if (this.options.callbacks?.beforeRender) {\r\n            this.options.callbacks.beforeRender()\r\n        }\r\n\r\n        const canvasRect = this.getCanvasContentElement().getBoundingClientRect();\r\n        if (pretty) {\r\n            //this will place the root at the top center of the canvas and render from there\r\n            this.setRootPosition(flow.rootStep, null);\r\n        }\r\n        this.renderChildTree(flow.rootStep, flow.rootStep.getCurrentRect(canvasRect), canvasRect);\r\n        \r\n        if (!skipAdjustDimensions && this.options.options.zoom.mode === 'DISABLED') {\r\n            this.adjustDimensions(flow, canvasRect);\r\n        }\r\n\r\n        if (this.options.callbacks?.afterRender) {\r\n            this.options.callbacks.afterRender()\r\n        }\r\n    }\r\n\r\n    private resetAdjustDimensions(): void {\r\n        // reset canvas auto sizing to original size if empty\r\n        if (this.viewContainer) {\r\n            const canvasWrapper = this.getCanvasContentElement();\r\n            canvasWrapper.style.minWidth = null;\r\n            canvasWrapper.style.minHeight = null;\r\n        }\r\n    }\r\n           \r\n\r\n    private findDropLocationForHover(absMouseXY: number[], targetStep: NgFlowchartStepComponent, stepToDrop: NgFlowchart.Step): DropProximity | 'deadzone' | null {\r\n\r\n        if (!targetStep.shouldEvalDropHover(absMouseXY, stepToDrop)) {\r\n            return 'deadzone'\r\n        }\r\n\r\n        const stepRect = targetStep.nativeElement.getBoundingClientRect();\r\n\r\n        const yStepCenter = stepRect.bottom - stepRect.height / 2;\r\n        const xStepCenter = stepRect.left + stepRect.width / 2;\r\n\r\n        const yDiff = absMouseXY[1] - yStepCenter;\r\n        const xDiff = absMouseXY[0] - xStepCenter;\r\n\r\n        const absYDistance = Math.abs(yDiff);\r\n        const absXDistance = Math.abs(xDiff);\r\n\r\n        //#math class #Pythagoras\r\n        const distance = Math.sqrt(absYDistance * absYDistance + absXDistance * absXDistance);\r\n        const accuracyRadius = (stepRect.height + stepRect.width) / 2;\r\n\r\n        let result: DropProximity | 'deadzone' | null = null;\r\n\r\n        if (distance < accuracyRadius) {\r\n            if (distance < this.options.options.hoverDeadzoneRadius) {\r\n                //basically we are too close to the middle to accurately predict what position they want\r\n                result = 'deadzone';\r\n            }\r\n\r\n            if (absYDistance > absXDistance) {\r\n                result = {\r\n                    step: targetStep,\r\n                    position: yDiff > 0 ? 'BELOW' : 'ABOVE',\r\n                    proximity: absYDistance\r\n                };\r\n            }\r\n            else if (!this.options.options.isSequential && !targetStep.isRootElement()) {\r\n                result = {\r\n                    step: targetStep,\r\n                    position: xDiff > 0 ? 'RIGHT' : 'LEFT',\r\n                    proximity: absXDistance\r\n                };\r\n            }\r\n        }\r\n\r\n        if (result && result !== 'deadzone') {\r\n            if (!targetStep.getDropPositionsForStep(stepToDrop).includes(result.position)) {\r\n                //we had a valid drop but the target step doesnt allow this location\r\n                result = null;\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    private adjustDimensions(flow: CanvasFlow, canvasRect: DOMRect): void {\r\n        let maxRight = 0;\r\n        let maxBottom = 0;\r\n\r\n        //TODO this can be better\r\n        flow.steps.forEach(\r\n            ele => {\r\n                let rect = ele.getCurrentRect(canvasRect);\r\n                maxRight = Math.max(rect.right, maxRight);\r\n                maxBottom = Math.max(rect.bottom, maxBottom);\r\n            }\r\n        );\r\n\r\n        const widthBorderGap = 100;\r\n        const widthDiff = canvasRect.width - (maxRight - canvasRect.left);\r\n        if (widthDiff < widthBorderGap) {\r\n            let growWidth = widthBorderGap;\r\n            if(widthDiff < 0) {\r\n                growWidth += Math.abs(widthDiff);\r\n            }\r\n            this.getCanvasContentElement().style.minWidth = `${canvasRect.width + growWidth}px`;\r\n            if (this.options.options.centerOnResize) {\r\n                this.render(flow, true, true);\r\n            }\r\n        } else if(widthDiff > widthBorderGap) {\r\n            var totalTreeWidth = this.getTotalTreeWidth(flow);\r\n            if(this.isNestedCanvas()) {\r\n                this.getCanvasContentElement().style.minWidth = `${totalTreeWidth + widthBorderGap}px`;\r\n                if (this.options.options.centerOnResize) {\r\n                    this.render(flow, true, true);\r\n                }\r\n            } else if(this.getCanvasContentElement().style.minWidth) {\r\n                // reset normal canvas width if auto width set\r\n                this.getCanvasContentElement().style.minWidth = null;\r\n                if (this.options.options.centerOnResize) {\r\n                    this.render(flow, true, true);\r\n                }\r\n            }\r\n        }\r\n        \r\n        const heightBorderGap = 50;\r\n        const heightDiff = canvasRect.height - (maxBottom - canvasRect.top);\r\n        if (heightDiff < heightBorderGap) {\r\n            let growHeight = heightBorderGap;\r\n            if(heightDiff < 0) {\r\n                growHeight += Math.abs(heightDiff);\r\n            }\r\n            this.getCanvasContentElement().style.minHeight = `${canvasRect.height + growHeight}px`;\r\n        } else if(heightDiff > heightBorderGap){\r\n            if(this.isNestedCanvas()) {\r\n                let shrinkHeight = heightDiff - heightBorderGap;\r\n                this.getCanvasContentElement().style.minHeight = `${canvasRect.height - shrinkHeight}px`;\r\n            } else if(this.getCanvasContentElement().style.minHeight) {\r\n                // reset normal canvas height if auto height set\r\n                this.getCanvasContentElement().style.minHeight = null;\r\n            }\r\n        }\r\n    }\r\n\r\n    private getTotalTreeWidth(flow: CanvasFlow): number {\r\n        let totalTreeWidth = 0;\r\n        const rootWidth = flow.rootStep.getCurrentRect().width / this.scale;\r\n        flow.rootStep.children.forEach(child => {\r\n            let totalChildWidth = child.getNodeTreeWidth(this.getStepGap());\r\n            totalTreeWidth += totalChildWidth / this.scale;\r\n        });\r\n        totalTreeWidth += (flow.rootStep.children.length - 1) * this.getStepGap();\r\n        // total tree width doesn't give root width\r\n        return Math.max(totalTreeWidth, rootWidth);\r\n    }\r\n\r\n    private findBestMatchForSteps(dragStep: NgFlowchart.Step, event: DragEvent, steps: ReadonlyArray<NgFlowchartStepComponent>): DropProximity | null {\r\n        const absXY = [event.clientX, event.clientY];\r\n\r\n        let bestMatch: DropProximity = null;\r\n\r\n        for (let i = 0; i < steps.length; i++) {\r\n\r\n            const step = steps[i];\r\n\r\n            if (step.isHidden()) {\r\n                continue;\r\n            }\r\n\r\n            const position = this.findDropLocationForHover(absXY, step, dragStep);\r\n            if (position) {\r\n                if (position == 'deadzone') {\r\n                    bestMatch = null;\r\n                    break;\r\n                }\r\n                //if this step is closer than previous best match then we have a new best\r\n                else if (bestMatch == null || bestMatch.proximity > position.proximity) {\r\n                    bestMatch = position;\r\n                }\r\n            }\r\n        }\r\n\r\n        return bestMatch\r\n    }\r\n\r\n    public findAndShowClosestDrop(dragStep: NgFlowchart.Step, event: DragEvent, steps: ReadonlyArray<NgFlowchartStepComponent>): NgFlowchart.DropTarget {\r\n        if (!steps || steps.length == 0) {\r\n            return;\r\n        }\r\n\r\n        let bestMatch: DropProximity = this.findBestMatchForSteps(dragStep, event, steps);\r\n\r\n        // TODO make this more efficient. two loops\r\n        steps.forEach(step => {\r\n            if (bestMatch == null || step.nativeElement.id !== bestMatch.step.nativeElement.id) {\r\n\r\n                step.clearHoverIcons();\r\n            }\r\n        })\r\n\r\n        if (!bestMatch) {\r\n            return;\r\n        }\r\n\r\n        bestMatch.step.showHoverIcon(bestMatch.position);\r\n\r\n        return {\r\n            step: bestMatch.step,\r\n            position: bestMatch.position\r\n        };\r\n    }\r\n\r\n    public showSnaps(dragStep: NgFlowchart.PendingStep) {\r\n\r\n\r\n    }\r\n\r\n    public clearAllSnapIndicators(steps: ReadonlyArray<NgFlowchartStepComponent>) {\r\n        steps.forEach(\r\n            step => step.clearHoverIcons()\r\n        )\r\n    }\r\n\r\n    private setRootPosition(step: NgFlowchartStepComponent, dragEvent?: DragEvent) {\r\n\r\n        if (!dragEvent) {\r\n            const canvasTop = this.getCanvasTopCenterPosition(step.nativeElement);\r\n            step.zsetPosition(canvasTop, true)\r\n            return;\r\n        }\r\n\r\n        switch (this.options.options.rootPosition) {\r\n            case 'CENTER':\r\n                const canvasCenter = this.getCanvasCenterPosition();\r\n                step.zsetPosition(canvasCenter, true);\r\n                return;\r\n            case 'TOP_CENTER':\r\n                const canvasTop = this.getCanvasTopCenterPosition(step.nativeElement);\r\n                step.zsetPosition(canvasTop, true)\r\n                return;\r\n            default:\r\n                const relativeXY = this.getRelativeXY(dragEvent);\r\n                step.zsetPosition(relativeXY, true);\r\n                return;\r\n        }\r\n    }\r\n\r\n    private getRelativeXY(dragEvent: DragEvent) {\r\n        const canvasRect = this.getCanvasContentElement().getBoundingClientRect();\r\n\r\n        return [\r\n            dragEvent.clientX - canvasRect.left,\r\n            dragEvent.clientY - canvasRect.top\r\n        ]\r\n    }\r\n\r\n    private getCanvasTopCenterPosition(htmlRootElement: HTMLElement) {\r\n        const canvasRect = this.getCanvasContentElement().getBoundingClientRect();\r\n        const rootElementHeight = htmlRootElement.getBoundingClientRect().height\r\n        const yCoord = rootElementHeight / 2 + this.options.options.stepGap\r\n        const scaleYOffset = (1 - this.scale) * 100\r\n            \r\n        return [\r\n            canvasRect.width / (this.scale * 2),\r\n            yCoord + scaleYOffset\r\n        ]\r\n    }\r\n\r\n    private getCanvasCenterPosition() {\r\n        const canvasRect = this.getCanvasContentElement().getBoundingClientRect();\r\n        return [\r\n            canvasRect.width / 2,\r\n            canvasRect.height / 2\r\n        ]\r\n    }\r\n\r\n    private getCanvasContentElement(): HTMLElement {\r\n        const canvas = this.viewContainer.element.nativeElement as HTMLElement;\r\n        let canvasContent = canvas.getElementsByClassName(CONSTANTS.CANVAS_CONTENT_CLASS).item(0);\r\n        return canvasContent as HTMLElement;\r\n    }\r\n\r\n    private isNestedCanvas(): boolean {\r\n        if (this.viewContainer) {\r\n            const canvasWrapper = (this.viewContainer.element.nativeElement as HTMLElement).parentElement;\r\n            if (canvasWrapper) {\r\n                return canvasWrapper.classList.contains('ngflowchart-step-wrapper');\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    public resetScale(flow: CanvasFlow) {\r\n        this.setScale(flow, 1)\r\n    }\r\n\r\n    public scaleUp(flow: CanvasFlow, step? : number) {\r\n        const newScale = this.scale + (this.scale * step || this.options.options.zoom.defaultStep)\r\n        this.setScale(flow, newScale)\r\n       \r\n    }\r\n\r\n    public scaleDown(flow: CanvasFlow, step? : number) {\r\n        const newScale = this.scale - (this.scale * step || this.options.options.zoom.defaultStep)\r\n        this.setScale(flow, newScale)\r\n    }\r\n\r\n    public setScale(flow: CanvasFlow, scaleValue: number) {\r\n        const minDimAdjust = `${1/scaleValue * 100}%`\r\n\r\n        const canvasContent = this.getCanvasContentElement()\r\n\r\n        canvasContent.style.transform = `scale(${scaleValue})`;\r\n        canvasContent.style.minHeight = minDimAdjust\r\n        canvasContent.style.minWidth = minDimAdjust\r\n        canvasContent.style.transformOrigin = 'top left'\r\n        canvasContent.classList.add('scaling')\r\n\r\n        this.scale = scaleValue\r\n        this.render(flow, true)\r\n\r\n        if(this.options.callbacks?.afterScale) {\r\n            this.options.callbacks.afterScale(this.scale)\r\n        }\r\n        \r\n        this.scaleDebounceTimer && clearTimeout(this.scaleDebounceTimer)\r\n        this.scaleDebounceTimer = setTimeout(() => {\r\n            canvasContent.classList.remove('scaling')\r\n        }, 300)\r\n\r\n    }\r\n\r\n\r\n}","import { Injectable } from \"@angular/core\";\r\nimport { NgFlowchart } from '../model/flow.model';\r\n\r\n\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class DropDataService {\r\n\r\n    dragStep: NgFlowchart.PendingStep | NgFlowchart.MoveStep;\r\n\r\n    constructor() {\r\n    }\r\n\r\n    public setDragStep(ref: NgFlowchart.PendingStep) {\r\n        this.dragStep = ref;\r\n    }\r\n\r\n    public getDragStep() {\r\n        return this.dragStep;\r\n    }\r\n}","import { Injectable, TemplateRef, Type } from '@angular/core';\r\nimport { NgFlowchartStepComponent } from './ng-flowchart-step/ng-flowchart-step.component';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class NgFlowchartStepRegistry {\r\n    \r\n    private registry = new Map<string, Type<NgFlowchartStepComponent> | TemplateRef<any>>();\r\n    \r\n    constructor() {\r\n\r\n    }\r\n\r\n    /**\r\n     * Register a step implementation. Only needed if you are uploading a flow from json\r\n     * @param type The unique type of the step\r\n     * @param step The step templateRef or component type to create for this key\r\n     */\r\n    registerStep(type: string, step: Type<NgFlowchartStepComponent> | TemplateRef<any>) {\r\n        this.registry.set(type, step);\r\n    }\r\n\r\n    getStepImpl(type: string): Type<NgFlowchartStepComponent> | TemplateRef<any> | null {\r\n        return this.registry.get(type);\r\n    }\r\n\r\n\r\n}","import { ComponentFactoryResolver, ComponentRef, Injectable, TemplateRef, Type, ViewContainerRef } from '@angular/core';\r\nimport { NgFlowchart } from '../model/flow.model';\r\nimport { NgFlowchartCanvasService } from '../ng-flowchart-canvas.service';\r\nimport { NgFlowchartStepRegistry } from '../ng-flowchart-step-registry.service';\r\nimport { NgFlowchartStepComponent } from '../ng-flowchart-step/ng-flowchart-step.component';\r\nimport { DropDataService } from './dropdata.service';\r\n\r\n/**\r\n * This service handles adding new steps to the canvas\r\n */\r\n@Injectable()\r\nexport class StepManagerService {\r\n\r\n  private viewContainer: ViewContainerRef;\r\n\r\n  constructor(private componentFactoryResolver: ComponentFactoryResolver, private registry: NgFlowchartStepRegistry) {\r\n\r\n  }\r\n\r\n  public init(viewContainer: ViewContainerRef) {\r\n    this.viewContainer = viewContainer;\r\n  }\r\n\r\n  public createFromRegistry(id: string, type: string, data: any, canvas: NgFlowchartCanvasService): ComponentRef<NgFlowchartStepComponent> {\r\n    let templateComp = this.registry.getStepImpl(type);\r\n    let compRef: ComponentRef<NgFlowchartStepComponent>;\r\n    if (templateComp instanceof TemplateRef || templateComp instanceof Type) {\r\n      compRef = this.create({\r\n        template: templateComp,\r\n        type: type,\r\n        data: data\r\n      }, canvas);\r\n    }\r\n    else {\r\n      throw 'Invalid registry implementation found for type ' + type;\r\n    }\r\n\r\n    compRef.instance.setId(id);\r\n    return compRef;\r\n  }\r\n\r\n  public create(pendingStep: NgFlowchart.PendingStep, canvas: NgFlowchartCanvasService): ComponentRef<NgFlowchartStepComponent> {\r\n    let componentRef: ComponentRef<NgFlowchartStepComponent>;\r\n\r\n    if (pendingStep.template instanceof TemplateRef) {\r\n      const factory = this.componentFactoryResolver.resolveComponentFactory(NgFlowchartStepComponent);\r\n      componentRef = this.viewContainer.createComponent<NgFlowchartStepComponent>(factory);\r\n      componentRef.instance.contentTemplate = pendingStep.template;\r\n      \r\n    }\r\n    else {\r\n      const factory = this.componentFactoryResolver.resolveComponentFactory(pendingStep.template);\r\n      componentRef = this.viewContainer.createComponent<any>(factory);\r\n    }\r\n    \r\n    componentRef.instance.data = JSON.parse(JSON.stringify(pendingStep.data));\r\n    componentRef.instance.type = pendingStep.type;\r\n    componentRef.instance.canvas = canvas;\r\n    componentRef.instance.compRef = componentRef;\r\n    componentRef.instance.init(\r\n      componentRef.injector.get(DropDataService),\r\n      componentRef.injector.get(ViewContainerRef),\r\n      componentRef.injector.get(ComponentFactoryResolver)\r\n    )\r\n    \r\n\r\n    return componentRef;\r\n  }\r\n}\r\n","import { ComponentRef, Injectable, ViewContainerRef } from '@angular/core';\r\nimport { NgFlowchart } from './model/flow.model';\r\nimport { NgFlowchartStepComponent } from './ng-flowchart-step/ng-flowchart-step.component';\r\nimport { CanvasRendererService } from './services/canvas-renderer.service';\r\nimport { DropDataService as DragService } from './services/dropdata.service';\r\nimport { OptionsService } from './services/options.service';\r\nimport { StepManagerService } from './services/step-manager.service';\r\n\r\ntype DropResponse = {\r\n  added: boolean,\r\n  prettyRender: boolean\r\n}\r\n\r\nexport class CanvasFlow {\r\n  rootStep: NgFlowchartStepComponent;\r\n\r\n  // steps from this canvas only\r\n  private _steps: NgFlowchartStepComponent[] = [];\r\n\r\n  hasRoot() {\r\n    return !!this.rootStep;\r\n  }\r\n\r\n  addStep(step: NgFlowchartStepComponent) {\r\n    this._steps.push(step)\r\n  }\r\n\r\n  removeStep(step: NgFlowchartStepComponent) {\r\n\r\n    let index = this._steps.findIndex(ele => ele.id == step.id);\r\n    if (index >= 0) {\r\n      this._steps.splice(index, 1);\r\n    }\r\n  }\r\n\r\n  get steps(): ReadonlyArray<NgFlowchartStepComponent> {\r\n    return this._steps;\r\n  }\r\n\r\n  constructor() {\r\n\r\n  }\r\n}\r\n\r\n@Injectable()\r\nexport class NgFlowchartCanvasService {\r\n\r\n  viewContainer: ViewContainerRef;\r\n  isDragging: boolean = false;\r\n\r\n  currentDropTarget: NgFlowchart.DropTarget;\r\n\r\n  flow: CanvasFlow = new CanvasFlow();\r\n\r\n  _disabled: boolean = false;\r\n\r\n  get disabled() {\r\n    return this._disabled;\r\n  }\r\n\r\n  noParentError = {\r\n    code: 'NO_PARENT',\r\n    message: 'Step was not dropped under a parent and is not the root node'\r\n  };\r\n\r\n  constructor(\r\n    private drag: DragService,\r\n    public options: OptionsService,\r\n    private renderer: CanvasRendererService,\r\n    private stepmanager: StepManagerService\r\n  ) {\r\n\r\n\r\n  }\r\n\r\n  public init(view: ViewContainerRef) {\r\n    this.viewContainer = view;\r\n    this.renderer.init(view);\r\n    this.stepmanager.init(view);\r\n\r\n    //hack to load the css\r\n    let ref = this.stepmanager.create({\r\n      template: NgFlowchartStepComponent,\r\n      type: '',\r\n      data: null\r\n    }, this);\r\n    const i = this.viewContainer.indexOf(ref.hostView)\r\n    this.viewContainer.remove(i);\r\n\r\n  }\r\n\r\n  public moveStep(drag: DragEvent, id: any) {\r\n    this.renderer.clearAllSnapIndicators(this.flow.steps);\r\n\r\n    let step: NgFlowchartStepComponent = this.flow.steps.find(step => step.nativeElement.id === id);\r\n    let error = {};\r\n    if(!step) {\r\n      // step cannot be moved if not in this canvas\r\n      return;\r\n    }\r\n    if (step.canDrop(this.currentDropTarget, error)) {\r\n      if (step.isRootElement()) {\r\n        this.renderer.updatePosition(step, drag);\r\n        this.renderer.render(this.flow);\r\n      }\r\n      else if (this.currentDropTarget) {\r\n        const response = this.addStepToFlow(step, this.currentDropTarget, true);\r\n        this.renderer.render(this.flow, response.prettyRender);\r\n      }\r\n      else {\r\n        this.moveError(step, this.noParentError);\r\n      }\r\n      if (this.options.callbacks?.onDropStep && (this.currentDropTarget || step.isRootElement())) {\r\n        this.options.callbacks.onDropStep({\r\n          isMove: true,\r\n          step: step,\r\n          parent: step.parent\r\n        })\r\n      }\r\n    }\r\n    else {\r\n      this.moveError(step, error);\r\n    }\r\n\r\n  }\r\n\r\n\r\n\r\n  public async onDrop(drag: DragEvent) {\r\n    this.renderer.clearAllSnapIndicators(this.flow.steps);\r\n\r\n    if (this.flow.hasRoot() && !this.currentDropTarget) {\r\n      this.dropError(this.noParentError);\r\n      return;\r\n    }\r\n\r\n    //TODO just pass dragStep here, but come up with a better name and move the type to flow.model\r\n    let componentRef = await this.createStep(this.drag.dragStep as NgFlowchart.PendingStep);\r\n\r\n    const dropTarget = this.currentDropTarget || null;\r\n    let error = {};\r\n    if (componentRef.instance.canDrop(dropTarget, error)) {\r\n      if (!this.flow.hasRoot()) {\r\n        this.renderer.renderRoot(componentRef, drag);\r\n        this.setRoot(componentRef.instance);\r\n      }\r\n      else {\r\n         // if root is replaced by another step, rerender root to proper position\r\n         if(dropTarget.step.isRootElement() && dropTarget.position === 'ABOVE') {\r\n          this.renderer.renderRoot(componentRef, drag);\r\n        }\r\n        this.addChildStep(componentRef, dropTarget);\r\n      }\r\n\r\n      if (this.options.callbacks?.onDropStep) {\r\n        this.options.callbacks.onDropStep({\r\n          step: componentRef.instance,\r\n          isMove: false,\r\n          parent: componentRef.instance.parent\r\n        })\r\n      }\r\n    }\r\n    else {\r\n      const i = this.viewContainer.indexOf(componentRef.hostView)\r\n      this.viewContainer.remove(i);\r\n      this.dropError(error);\r\n    }\r\n  }\r\n\r\n\r\n  public onDragStart(drag: DragEvent) {\r\n\r\n    this.isDragging = true;\r\n\r\n    this.currentDropTarget = this.renderer.findAndShowClosestDrop(this.drag.dragStep, drag, this.flow.steps);\r\n  }\r\n\r\n  public createStepFromType(id: string, type: string, data: any): Promise<ComponentRef<NgFlowchartStepComponent>> {\r\n    let compRef = this.stepmanager.createFromRegistry(id, type, data, this);\r\n    return new Promise((resolve) => {\r\n      let sub = compRef.instance.viewInit.subscribe(async () => {\r\n        sub.unsubscribe();\r\n        setTimeout(() => {\r\n          compRef.instance.onUpload(data)\r\n        })\r\n        resolve(compRef);\r\n      })\r\n    })\r\n  }\r\n\r\n  public createStep(pending: NgFlowchart.PendingStep): Promise<ComponentRef<NgFlowchartStepComponent>> {\r\n    let componentRef: ComponentRef<NgFlowchartStepComponent>;\r\n\r\n    componentRef = this.stepmanager.create(pending, this);\r\n\r\n    return new Promise((resolve) => {\r\n      let sub = componentRef.instance.viewInit.subscribe(() => {\r\n        sub.unsubscribe();\r\n        resolve(componentRef);\r\n      }, error => console.error(error))\r\n    })\r\n  }\r\n\r\n  public resetScale() {\r\n    if(this.options.options.zoom.mode === 'DISABLED') {\r\n      return\r\n    }\r\n    this.renderer.resetScale(this.flow)\r\n  }\r\n\r\n  public scaleUp(step?: number) {\r\n    if(this.options.options.zoom.mode === 'DISABLED') {\r\n      return\r\n    }\r\n    this.renderer.scaleUp(this.flow, step);\r\n\r\n  }\r\n\r\n  public scaleDown(step?: number) {\r\n    if(this.options.options.zoom.mode === 'DISABLED') {\r\n      return\r\n    }\r\n    this.renderer.scaleDown(this.flow, step);\r\n\r\n  }\r\n\r\n  public setScale(scaleValue: number) {\r\n    if(this.options.options.zoom.mode === 'DISABLED') {\r\n      return\r\n    }\r\n    this.renderer.setScale(this.flow, scaleValue)\r\n  }\r\n\r\n\r\n  addChildStep(componentRef: ComponentRef<NgFlowchartStepComponent>, dropTarget: NgFlowchart.DropTarget) {\r\n    this.addToCanvas(componentRef);\r\n    const response = this.addStepToFlow(componentRef.instance, dropTarget);\r\n    this.renderer.render(this.flow, response.prettyRender);\r\n  }\r\n\r\n  addToCanvas(componentRef: ComponentRef<NgFlowchartStepComponent>) {\r\n    this.renderer.renderNonRoot(componentRef);\r\n  }\r\n\r\n  reRender(pretty?: boolean) {\r\n    this.renderer.render(this.flow, pretty);\r\n  }\r\n\r\n  async upload(root: any) {\r\n    await this.uploadNode(root);\r\n    this.reRender(true);\r\n  }\r\n\r\n  private async uploadNode(node: any, parentNode?: NgFlowchartStepComponent): Promise<NgFlowchartStepComponent> {\r\n    if(!node){\r\n      // no node to upload when uploading empty nested flow\r\n      return;\r\n    }\r\n\r\n    let comp = await this.createStepFromType(node.id, node.type, node.data);\r\n    if (!parentNode) {\r\n      this.setRoot(comp.instance);\r\n      this.renderer.renderRoot(comp, null);\r\n    }\r\n    else {\r\n      this.renderer.renderNonRoot(comp);\r\n      this.flow.addStep(comp.instance);\r\n    }\r\n\r\n    for (let i = 0; i < node.children.length; i++) {\r\n      let child = node.children[i];\r\n      let childComp = await this.uploadNode(child, comp.instance);\r\n      comp.instance.children.push(childComp);\r\n      childComp.setParent(comp.instance, true);\r\n    }\r\n\r\n    return comp.instance;\r\n  }\r\n\r\n  private setRoot(step: NgFlowchartStepComponent, force: boolean = true) {\r\n    if (this.flow.hasRoot()) {\r\n      if (!force) {\r\n        console.warn('Already have a root and force is false');\r\n        return;\r\n      }\r\n\r\n      //reparent root\r\n      let oldRoot = this.flow.rootStep;\r\n      this.flow.rootStep = step;\r\n      step.zaddChild0(oldRoot);\r\n    }\r\n    else {\r\n      this.flow.rootStep = step;\r\n    }\r\n\r\n    this.flow.addStep(step);\r\n  }\r\n\r\n  private addStepToFlow(step: NgFlowchartStepComponent, dropTarget: NgFlowchart.DropTarget, isMove = false): DropResponse {\r\n\r\n    let response = {\r\n        added: false,\r\n        prettyRender: false,\r\n    };\r\n\r\n    switch (dropTarget.position) {\r\n      case 'ABOVE':\r\n        response = this.placeStepAbove(step, dropTarget.step);\r\n        break;\r\n      case 'BELOW':\r\n        response = this.placeStepBelow(step, dropTarget.step);\r\n        console.log(response, [...dropTarget.step.children])\r\n        break;\r\n      case 'LEFT':\r\n        response = this.placeStepAdjacent(step, dropTarget.step, true);\r\n        break;\r\n      case 'RIGHT':\r\n        response = this.placeStepAdjacent(step, dropTarget.step, false);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    if (!isMove && response.added) {\r\n      this.flow.addStep(step);\r\n    }\r\n    return response;\r\n  }\r\n\r\n  private placeStepBelow(newStep: NgFlowchartStepComponent, parentStep: NgFlowchartStepComponent): DropResponse {\r\n    return {\r\n      added: parentStep.zaddChild0(newStep),\r\n      prettyRender: false,\r\n    }\r\n  }\r\n\r\n  private placeStepAdjacent(newStep: NgFlowchartStepComponent, siblingStep: NgFlowchartStepComponent, isLeft: boolean = true): DropResponse {\r\n    if (siblingStep.parent) {\r\n      //find the adjacent steps index in the parents child array\r\n      const adjacentIndex = siblingStep.parent.children.findIndex(child => child.nativeElement.id == siblingStep.nativeElement.id);\r\n      siblingStep.parent.zaddChildSibling0(newStep, adjacentIndex + (isLeft ? 0 : 1));\r\n    }\r\n    else {\r\n      console.warn('Parallel actions must have a common parent');\r\n      return {\r\n        added: false,\r\n        prettyRender: false,\r\n      };\r\n    }\r\n    return {\r\n      added: true,\r\n      prettyRender: false,\r\n    };\r\n  }\r\n\r\n  private placeStepAbove(newStep: NgFlowchartStepComponent, childStep: NgFlowchartStepComponent): DropResponse {\r\n    let prettyRender = false\r\n    let newParent = childStep.parent;\r\n    if (newParent) {\r\n      //we want to remove child and insert our newStep at the same index\r\n      let index = newParent.removeChild(childStep);\r\n      newStep.zaddChild0(childStep);\r\n      newParent.zaddChild0(newStep);\r\n    }\r\n    else { // new root node\r\n      newStep.parent?.removeChild(newStep)\r\n      newStep.setParent(null, true)\r\n      \r\n      //if the new step was a direct child of the root step, we need to break that connection\r\n      childStep.removeChild(newStep)\r\n      this.setRoot(newStep);\r\n\r\n      prettyRender = true\r\n      \r\n    }\r\n    return {\r\n      added: true,\r\n      prettyRender\r\n    };\r\n  }\r\n\r\n  private dropError(error: NgFlowchart.ErrorMessage) {\r\n    if (this.options.callbacks?.onDropError) {\r\n      let parent = this.currentDropTarget?.position !== 'BELOW' ? this.currentDropTarget?.step.parent : this.currentDropTarget?.step\r\n      this.options.callbacks.onDropError({\r\n        step: (this.drag.dragStep as NgFlowchart.PendingStep),\r\n        parent: parent || null,\r\n        error: error\r\n      })\r\n    }\r\n  }\r\n\r\n  private moveError(step: NgFlowchartStepComponent, error) {\r\n    if (this.options.callbacks?.onMoveError) {\r\n      let parent = this.currentDropTarget?.position !== 'BELOW' ? this.currentDropTarget?.step.parent : this.currentDropTarget?.step\r\n      this.options.callbacks.onMoveError({\r\n        step: {\r\n          instance: step,\r\n          type: step.type,\r\n          data: step.data\r\n        },\r\n        parent: parent,\r\n        error: error\r\n      })\r\n    }\r\n  }\r\n}\r\n","import { AfterViewInit, Directive, ElementRef, HostBinding, HostListener, Input, OnDestroy, OnInit, ViewContainerRef } from '@angular/core';\r\nimport { NgFlowchart } from './model/flow.model';\r\nimport { CONSTANTS } from './model/flowchart.constants';\r\nimport { NgFlowchartCanvasService } from './ng-flowchart-canvas.service';\r\nimport { CanvasRendererService } from './services/canvas-renderer.service';\r\nimport { OptionsService } from './services/options.service';\r\nimport { StepManagerService } from './services/step-manager.service';\r\n\r\n\r\n\r\n@Directive({\r\n    selector: '[ngFlowchartCanvas]',\r\n    providers: [\r\n        NgFlowchartCanvasService,\r\n        StepManagerService,\r\n        OptionsService,\r\n        CanvasRendererService\r\n    ]\r\n})\r\nexport class NgFlowchartCanvasDirective implements OnInit, OnDestroy, AfterViewInit {\r\n\r\n    @HostListener('drop', ['$event'])\r\n    protected onDrop(event: DragEvent) {\r\n        if (this._disabled) { return; }\r\n\r\n        // its possible multiple canvases exist so make sure we only move/drop on the closest one\r\n        const closestCanvasId = (event.target as HTMLElement).closest('.ngflowchart-canvas-content')?.id\r\n        if (this._id !== closestCanvasId) {\r\n            return;\r\n        }\r\n\r\n        const type = event.dataTransfer.getData('type');\r\n        if ('FROM_CANVAS' == type) {\r\n            this.canvas.moveStep(event, event.dataTransfer.getData('id'));\r\n        }\r\n        else {\r\n            this.canvas.onDrop(event);\r\n        }\r\n\r\n    }\r\n\r\n    @HostListener('dragover', ['$event'])\r\n    protected onDragOver(event: DragEvent) {\r\n        event.preventDefault();\r\n        if (this._disabled) { return; }\r\n        this.canvas.onDragStart(event);\r\n    }\r\n\r\n    _options: NgFlowchart.Options;\r\n    _callbacks: NgFlowchart.Callbacks;\r\n\r\n    @HostListener('window:resize', ['$event'])\r\n    protected onResize(event) {\r\n        if (this._options.centerOnResize) {\r\n            this.canvas.reRender(true);\r\n        }\r\n    }\r\n\r\n    @HostListener('wheel', ['$event'])\r\n    protected onZoom(event) {\r\n        if (this._options.zoom.mode === 'WHEEL') {\r\n            this.adjustWheelScale(event)\r\n        }\r\n    }\r\n\r\n    @Input('ngFlowchartCallbacks')\r\n    set callbacks(callbacks: NgFlowchart.Callbacks) {\r\n        this.optionService.setCallbacks(callbacks);\r\n    }\r\n\r\n    @Input('ngFlowchartOptions')\r\n    set options(options: NgFlowchart.Options) {\r\n        this.optionService.setOptions(options);\r\n        this._options = this.optionService.options;\r\n        this.canvas.reRender();\r\n\r\n    }\r\n\r\n    get options() {\r\n        return this._options\r\n    }\r\n\r\n    @Input('disabled')\r\n    @HostBinding('attr.disabled')\r\n    set disabled(val: boolean) {\r\n        this._disabled = val !== false;\r\n        if (this.canvas) {\r\n            this.canvas._disabled = this._disabled;\r\n        }\r\n    }\r\n\r\n    get disabled() {\r\n        return this._disabled;\r\n    }\r\n\r\n    private _disabled: boolean = false;\r\n    private _id: string = null\r\n    private canvasContent: HTMLElement;\r\n\r\n    constructor(\r\n        protected canvasEle: ElementRef<HTMLElement>,\r\n        private viewContainer: ViewContainerRef,\r\n        private canvas: NgFlowchartCanvasService,\r\n        private optionService: OptionsService\r\n    ) {\r\n\r\n        this.canvasEle.nativeElement.classList.add(CONSTANTS.CANVAS_CLASS);\r\n        this.canvasContent = this.createCanvasContent(this.viewContainer);\r\n        this._id = this.canvasContent.id\r\n\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.canvas.init(this.viewContainer);\r\n        if (!this._options) {\r\n            this.options = new NgFlowchart.Options();\r\n        }\r\n\r\n        this.canvas._disabled = this._disabled;\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n\r\n    }\r\n\r\n    ngOnDestroy() {\r\n\r\n        for (let i = 0; i < this.viewContainer.length; i++) {\r\n            this.viewContainer.remove(i)\r\n        }\r\n        this.canvasEle.nativeElement.remove()\r\n        this.viewContainer.element.nativeElement.remove()\r\n        this.viewContainer = undefined\r\n    }\r\n\r\n    private createCanvasContent(viewContainer: ViewContainerRef): HTMLElement {\r\n        const canvasId = 'c' + Date.now();\r\n\r\n        let canvasEle = viewContainer.element.nativeElement as HTMLElement;\r\n        let canvasContent = document.createElement('div');\r\n        canvasContent.id = canvasId;\r\n        canvasContent.classList.add(CONSTANTS.CANVAS_CONTENT_CLASS);\r\n        canvasEle.appendChild(canvasContent);\r\n        return canvasContent\r\n    }\r\n\r\n    /**\r\n     * Returns the Flow object representing this flow chart.\r\n     */\r\n    public getFlow() {\r\n        return new NgFlowchart.Flow(this.canvas);\r\n    }\r\n\r\n    public scaleDown() {\r\n        this.canvas.scaleDown()\r\n    }\r\n\r\n    public scaleUp() {\r\n        this.canvas.scaleUp()\r\n    }\r\n\r\n    public setScale(scaleValue: number) {\r\n        \r\n        const scaleVal = Math.max(0, scaleValue)\r\n        this.canvas.setScale(scaleVal)\r\n    }\r\n\r\n    private adjustWheelScale(event) {\r\n\r\n        if (this.canvas.flow.hasRoot()) {\r\n            event.preventDefault();\r\n            // scale down / zoom out\r\n            if (event.deltaY > 0) {\r\n                this.scaleDown()\r\n            }\r\n            // scale up / zoom in\r\n            else if (event.deltaY < 0) {\r\n                this.scaleUp()\r\n            }\r\n\r\n        }\r\n    };\r\n}","import { AfterViewInit, Directive, ElementRef, HostListener, Input } from '@angular/core';\r\nimport { NgFlowchart } from './model/flow.model';\r\nimport { DropDataService } from './services/dropdata.service';\r\n\r\n@Directive({\r\n    selector: '[ngFlowchartStep]'\r\n})\r\nexport class NgFlowchartStepDirective implements AfterViewInit {\r\n\r\n    @HostListener('dragstart', ['$event'])\r\n    onDragStart(event: DragEvent) {\r\n        this.data.setDragStep(this.flowStep);\r\n        event.dataTransfer.setData('type', 'FROM_PALETTE');\r\n    }\r\n\r\n    @HostListener('dragend', ['$event'])\r\n    onDragEnd(event: DragEvent) {\r\n        \r\n        this.data.setDragStep(null);\r\n       \r\n    }\r\n\r\n    @Input('ngFlowchartStep')\r\n    flowStep: NgFlowchart.PendingStep;\r\n\r\n    constructor(\r\n        protected element: ElementRef<HTMLElement>,\r\n        private data: DropDataService\r\n    ) {\r\n        this.element.nativeElement.setAttribute('draggable', 'true');\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n    }\r\n}","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { NgFlowchartArrowComponent } from './ng-flowchart-arrow/ng-flowchart-arrow.component';\r\nimport { NgFlowchartCanvasDirective } from './ng-flowchart-canvas.directive';\r\nimport { NgFlowchartStepDirective } from './ng-flowchart-step.directive';\r\nimport { NgFlowchartStepComponent } from './ng-flowchart-step/ng-flowchart-step.component';\r\n\r\n@NgModule({\r\n  declarations: [NgFlowchartCanvasDirective, NgFlowchartStepDirective, NgFlowchartStepComponent, NgFlowchartArrowComponent],\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  exports: [NgFlowchartCanvasDirective, NgFlowchartStepDirective, NgFlowchartStepComponent, NgFlowchartArrowComponent],\r\n  entryComponents: [\r\n    NgFlowchartStepComponent,\r\n    NgFlowchartArrowComponent\r\n  ]\r\n})\r\nexport class NgFlowchartModule { }\r\n","/*\r\n * Public API Surface of ng-flowchart\r\n */\r\n\r\nexport * from './lib/model/flow.model';\r\nexport * from './lib/ng-flowchart-canvas.directive';\r\nexport * from './lib/ng-flowchart-step-registry.service';\r\nexport * from './lib/services/options.service'\r\nexport * from './lib/ng-flowchart-step.directive';\r\nexport * from './lib/ng-flowchart-step/ng-flowchart-step.component';\r\nexport * from './lib/ng-flowchart-arrow/ng-flowchart-arrow.component';\r\nexport * from './lib/ng-flowchart.module';\r\n\r\n\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n\nexport {NgFlowchartCanvasService as ɵa} from './lib/ng-flowchart-canvas.service';\nexport {CanvasRendererService as ɵc} from './lib/services/canvas-renderer.service';\nexport {DropDataService as ɵb} from './lib/services/dropdata.service';\nexport {StepManagerService as ɵd} from './lib/services/step-manager.service';"],"names":["DragService"],"mappings":"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"}