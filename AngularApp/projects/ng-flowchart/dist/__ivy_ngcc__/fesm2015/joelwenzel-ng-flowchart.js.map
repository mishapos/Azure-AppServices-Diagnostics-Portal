{"version":3,"file":"joelwenzel-ng-flowchart.js","sources":["../../src/lib/model/flow.model.ts","../../src/lib/model/flowchart.constants.ts","../../src/lib/ng-flowchart-arrow/ng-flowchart-arrow.component.ts","../../src/lib/ng-flowchart-step/ng-flowchart-step.component.ts","../../src/lib/services/options.service.ts","../../src/lib/services/canvas-renderer.service.ts","../../src/lib/services/dropdata.service.ts","../../src/lib/ng-flowchart-step-registry.service.ts","../../src/lib/services/step-manager.service.ts","../../src/lib/ng-flowchart-canvas.service.ts","../../src/lib/ng-flowchart-canvas.directive.ts","../../src/lib/ng-flowchart-step.directive.ts","../../src/lib/ng-flowchart.module.ts","../../src/index.ts","../../src/joelwenzel-ng-flowchart.ts"],"names":["DragService"],"mappings":"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","sourcesContent":["import { TemplateRef, Type } from '@angular/core';\r\nimport { NgFlowchartCanvasService } from '../ng-flowchart-canvas.service';\r\nimport { NgFlowchartStepComponent } from '../ng-flowchart-step/ng-flowchart-step.component';\r\n\r\nexport namespace NgFlowchart {\r\n    export class Flow {\r\n        constructor(private canvas: NgFlowchartCanvasService) {\r\n\r\n        }\r\n\r\n        /**\r\n         * Returns the json representation of this flow\r\n         * @param indent Optional indent to specify for formatting\r\n         */\r\n        toJSON(indent?: number) {\r\n            return JSON.stringify(this.toObject(), null, indent);\r\n        }\r\n\r\n        toObject() {\r\n            return {\r\n                root: this.canvas.flow.rootStep?.toJSON()\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Create a flow and render it on the canvas from a json string\r\n         * @param json The json string of the flow to render\r\n         */\r\n        async upload(json: string | object): Promise<void> {\r\n            let jsonObj = typeof json === 'string' ? JSON.parse(json) : json\r\n            let root: any = jsonObj.root;\r\n            this.clear();\r\n\r\n            await this.canvas.upload(root);\r\n        }\r\n\r\n        /**\r\n         * Returns the root step of the flow chart\r\n         */\r\n        getRoot(): NgFlowchartStepComponent {\r\n            return this.canvas.flow.rootStep;\r\n        }\r\n\r\n        /**\r\n         * Finds a step in the flow chart by a given id\r\n         * @param id Id of the step to find. By default, the html id of the step\r\n         */\r\n        getStep(id): NgFlowchartStepComponent {\r\n            return this.canvas.flow.steps.find(child => child.id == id);\r\n        }\r\n\r\n        /**\r\n         * Re-renders the canvas. Generally this should only be used in rare circumstances\r\n         * @param pretty Attempt to recenter the flow in the canvas\r\n         */\r\n        render(pretty?: boolean) {\r\n            this.canvas.reRender(pretty);\r\n        }\r\n\r\n        /**\r\n         * Clears all flow chart, reseting the current canvas\r\n         */\r\n        clear() {\r\n            if (this.canvas.flow?.rootStep) {\r\n                this.canvas.flow.rootStep.destroy(true, false);\r\n                this.canvas.reRender();\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    export class Options {\r\n        /** The gap (in pixels) between flow steps*/\r\n        stepGap?: number = 40;\r\n\r\n        /** An inner deadzone radius (in pixels) that will not register the hover icon  */\r\n        hoverDeadzoneRadius?: number = 20;\r\n\r\n        /** Is the flow sequential? If true, then you will not be able to drag parallel steps */\r\n        isSequential?: boolean = false;\r\n\r\n        /** The default root position when dropped. Default is TOP_CENTER */\r\n        rootPosition?: 'TOP_CENTER' | 'CENTER' | 'FREE' = 'TOP_CENTER';\r\n\r\n        /** Should the canvas be centered when a resize is detected? */\r\n        centerOnResize?: boolean = true;\r\n\r\n        /** Canvas zoom options. Defaults to mouse wheel zoom */\r\n        zoom?: {\r\n            mode: 'WHEEL' | 'MANUAL' | 'DISABLED'\r\n            defaultStep?: number\r\n        } = {\r\n            mode: 'WHEEL',\r\n            defaultStep: .1\r\n        }\r\n    }\r\n\r\n    export type DropEvent = {\r\n        step: NgFlowchartStepComponent,\r\n        parent?: NgFlowchartStepComponent,\r\n        isMove: boolean\r\n    }\r\n\r\n    export type DropError = {\r\n        step: PendingStep,\r\n        parent?: NgFlowchartStepComponent,\r\n        error: ErrorMessage\r\n    }\r\n\r\n    export type MoveError = {\r\n        step: MoveStep,\r\n        parent?: NgFlowchartStepComponent,\r\n        error: ErrorMessage\r\n    }\r\n\r\n    export type ErrorMessage = {\r\n        code?: string,\r\n        message?: string\r\n    }\r\n\r\n    export interface MoveStep extends Step {\r\n        instance: NgFlowchartStepComponent\r\n    }\r\n\r\n    export interface PendingStep extends Step {\r\n        /**\r\n         * An Ng-template containing the canvas content to be displayed. \r\n         * Or a component type that extends NgFlowchartStepComponent\r\n         */\r\n        template: TemplateRef<any> | Type<NgFlowchartStepComponent>\r\n    }\r\n\r\n    export interface Step {\r\n        /**\r\n         * A unique string indicating the type of step this is.\r\n         * This type will be used to register steps if you are uploading from json.\r\n         */\r\n        type: string,\r\n        /**\r\n         * Optional data to give the step. Typically configuration data that users can edit on the step.\r\n         */\r\n        data?: any\r\n    }\r\n\r\n\r\n\r\n    export type DropTarget = {\r\n        step: NgFlowchartStepComponent,\r\n        position: DropPosition\r\n    }\r\n\r\n    export type DropStatus = 'SUCCESS' | 'PENDING' | 'FAILED';\r\n    export type DropPosition = 'RIGHT' | 'LEFT' | 'BELOW' | 'ABOVE';\r\n\r\n    export type Callbacks = {\r\n\r\n        /**\r\n         * Called when user drops a new step from the palette or moves an existing step\r\n         */\r\n        onDropStep?: (drop: DropEvent) => void;\r\n\r\n        /**\r\n         * Called when the delete method has been called on the step\r\n         */\r\n        beforeDeleteStep?: (step: NgFlowchartStepComponent) => void;\r\n\r\n        /**\r\n         * Called after the delete method has run on the step. If you need to access\r\n         * step children or parents, use beforeDeleteStep\r\n         */\r\n        afterDeleteStep?: (step: NgFlowchartStepComponent) => void;\r\n\r\n        /**\r\n         * Called when a new step fails to drop on the canvas\r\n         */\r\n        onDropError?: (drop: DropError) => void;\r\n\r\n        /**\r\n         * Called when an existing step fails to move\r\n         */\r\n        onMoveError?: (drop: MoveError) => void;\r\n\r\n        /**\r\n         * Called before the canvas is about to re-render\r\n         */\r\n        beforeRender?: () => void\r\n\r\n        /**\r\n         * Called after the canvas completes a re-render\r\n         */\r\n        afterRender?: () => void        \r\n\r\n        /**\r\n         * Called after the canvas has been scaled\r\n         */\r\n        afterScale?: (newScale: number) => void\r\n    };\r\n}\r\n\r\n\r\n\r\n\r\n","export const CONSTANTS = {\r\n    DROP_HOVER_ATTR: 'ngflowchart-drop-hover',\r\n    CANVAS_CONTENT_CLASS: 'ngflowchart-canvas-content',\r\n    CANVAS_CONTENT_ID: 'ngflowchart-canvas-content',\r\n    CANVAS_CLASS: 'ngflowchart-canvas',\r\n    CANVAS_STEP_CLASS: 'ngflowchart-canvas-step',\r\n}","import { AfterViewInit, Component, ElementRef, Input, OnInit, ViewChild } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'lib-ng-flowchart-arrow',\r\n  templateUrl: './ng-flowchart-arrow.component.html',\r\n  styleUrls: ['./ng-flowchart-arrow.component.scss']\r\n})\r\nexport class NgFlowchartArrowComponent implements OnInit, AfterViewInit {\r\n\r\n  @ViewChild('arrow')\r\n  arrow: ElementRef;\r\n\r\n  @Input()\r\n  set position(pos: { start: number[], end: number[] }) {\r\n    this._position = pos;\r\n\r\n    this.isLeftFlowing = pos.start[0] > pos.end[0];\r\n\r\n    //in the case where steps are directly underneath we need some minimum width\r\n    this.containerWidth = Math.abs(pos.start[0] - pos.end[0]) + (this.padding * 2);\r\n\r\n    this.containerLeft = Math.min(pos.start[0], pos.end[0]) - this.padding;\r\n\r\n    this.containerHeight = Math.abs(pos.start[1] - pos.end[1]);\r\n    this.containerTop = pos.start[1];\r\n\r\n    this.updatePath();\r\n  }\r\n\r\n  opacity = 1;\r\n  containerWidth: number = 0;\r\n  containerHeight: number = 0;\r\n  containerLeft: number = 0;\r\n  containerTop: number = 0;\r\n  _position: { start: number[], end: number[] }\r\n\r\n\r\n  //to be applied on left and right edges\r\n  private padding = 10;\r\n  private isLeftFlowing = false;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.updatePath();\r\n  }\r\n\r\n  hideArrow() {\r\n    this.opacity = .2;\r\n  }\r\n\r\n  showArrow() {\r\n    this.opacity = 1;\r\n  }\r\n\r\n  private updatePath() {\r\n    if (!this.arrow?.nativeElement) {\r\n      return;\r\n    }\r\n\r\n    if (this.isLeftFlowing) {\r\n      this.arrow.nativeElement.setAttribute(\"d\", `\r\n        M${this.containerWidth - this.padding},0 \r\n        L${this.containerWidth - this.padding},${this.containerHeight / 2}\r\n        L${this.padding},${this.containerHeight / 2}\r\n        L${this.padding},${this.containerHeight - 4}\r\n      `);\r\n    }\r\n    else {\r\n      this.arrow.nativeElement.setAttribute(\"d\", `\r\n        M${this.padding},0 \r\n        L${this.padding},${this.containerHeight / 2}\r\n        L${this.containerWidth - this.padding},${this.containerHeight / 2}\r\n        L${this.containerWidth - this.padding},${this.containerHeight - 4}\r\n      `);\r\n    }\r\n\r\n\r\n  }\r\n\r\n}\r\n","import { Component, ComponentFactoryResolver, ComponentRef, ElementRef, EventEmitter, HostListener, Input, Output, TemplateRef, ViewChild, ViewContainerRef, ViewEncapsulation } from '@angular/core';\r\nimport { NgFlowchart } from '../model/flow.model';\r\nimport { CONSTANTS } from '../model/flowchart.constants';\r\nimport { NgFlowchartArrowComponent } from '../ng-flowchart-arrow/ng-flowchart-arrow.component';\r\nimport { NgFlowchartCanvasService } from '../ng-flowchart-canvas.service';\r\nimport { DropDataService } from '../services/dropdata.service';\r\n\r\nexport type AddChildOptions = {\r\n  /** Should the child be added as a sibling to existing children, if false the existing children will be reparented to this new child.\r\n   * Default is true.\r\n   * */\r\n  sibling?: boolean,\r\n  /** The index of the child. Only used when sibling is true.\r\n   * Defaults to the end of the child array. \r\n   */\r\n  index?: number\r\n}\r\n\r\n@Component({\r\n  selector: 'ng-flowchart-step',\r\n  templateUrl: './ng-flowchart-step.component.html',\r\n  styleUrls: ['./ng-flowchart-step.component.scss'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class NgFlowchartStepComponent<T = any> {\r\n\r\n  @HostListener('dragstart', ['$event'])\r\n  onMoveStart(event: DragEvent) {\r\n    if (this.canvas.disabled) { return; }\r\n    this.hideTree();\r\n    event.dataTransfer.setData('type', 'FROM_CANVAS');\r\n    event.dataTransfer.setData('id', this.nativeElement.id);\r\n\r\n\r\n    this.drop.dragStep = {\r\n      type: this.type,\r\n      data: this.data,\r\n      instance: this\r\n    }\r\n  }\r\n\r\n  @HostListener('dragend', ['$event'])\r\n  onMoveEnd(event: DragEvent) {\r\n    this.showTree();\r\n  }\r\n\r\n  //could potentially try to make this abstract\r\n  @ViewChild('canvasContent')\r\n  protected view: ElementRef;\r\n\r\n  @Input()\r\n  data: T;\r\n\r\n  @Input()\r\n  type: string;\r\n\r\n  @Input()\r\n  canvas: NgFlowchartCanvasService;\r\n\r\n  @Input()\r\n  compRef: ComponentRef<NgFlowchartStepComponent>;\r\n\r\n  @Output()\r\n  viewInit = new EventEmitter();\r\n\r\n  @Input()\r\n  contentTemplate: TemplateRef<any>;\r\n\r\n\r\n  private _id: any;\r\n  private _currentPosition = [0, 0];\r\n\r\n  //only used if something tries to set the position before view has been initialized\r\n  private _initPosition;\r\n  private _isHidden = false;\r\n  private _parent: NgFlowchartStepComponent;\r\n  private _children: Array<NgFlowchartStepComponent>;\r\n  private arrow: ComponentRef<NgFlowchartArrowComponent>;\r\n\r\n  private drop: DropDataService;\r\n  private viewContainer: ViewContainerRef;\r\n  private compFactory: ComponentFactoryResolver;\r\n\r\n  constructor() {\r\n    this._children = [];\r\n  }\r\n\r\n  init(drop, viewContainer, compFactory) {\r\n    this.drop = drop;\r\n    this.viewContainer = viewContainer;\r\n    this.compFactory = compFactory;\r\n  }\r\n\r\n  canDeleteStep(): boolean {\r\n    return true;\r\n  }\r\n\r\n  canDrop(dropEvent: NgFlowchart.DropTarget, error: NgFlowchart.ErrorMessage): boolean {\r\n    return true;\r\n  }\r\n\r\n  shouldEvalDropHover(coords: number[], stepToDrop: NgFlowchart.Step): boolean {\r\n    return true\r\n  }\r\n\r\n  async onUpload(data: T) { }\r\n\r\n  getDropPositionsForStep(step: NgFlowchart.Step): NgFlowchart.DropPosition[] {\r\n    return ['BELOW', 'LEFT', 'RIGHT', 'ABOVE'];\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    if (!this.nativeElement) {\r\n      throw 'Missing canvasContent ViewChild. Be sure to add #canvasContent to your root html element.'\r\n    }\r\n\r\n\r\n    this.nativeElement.classList.add('ngflowchart-step-wrapper');\r\n    this.nativeElement.setAttribute('draggable', 'true');\r\n\r\n    if (this._initPosition) {\r\n      this.zsetPosition(this._initPosition);\r\n    }\r\n\r\n    //force id creation if not already there\r\n    this.nativeElement.id = this.id;\r\n\r\n    this.viewInit.emit();\r\n  }\r\n\r\n  get id() {\r\n    if (this._id == null) {\r\n      this._id = 's' + Date.now();\r\n    }\r\n    return this._id;\r\n  }\r\n\r\n  get currentPosition() {\r\n    return this._currentPosition;\r\n  }\r\n\r\n  /**\r\n   * Creates and adds a child to this step\r\n   * @param template The template or component type to create\r\n   * @param options Add options \r\n   */\r\n  async addChild(pending: NgFlowchart.PendingStep, options: AddChildOptions): Promise<NgFlowchartStepComponent | null> {\r\n\r\n    let componentRef = await this.canvas.createStep(pending);\r\n    this.canvas.addToCanvas(componentRef);\r\n    if (options?.sibling) {\r\n      this.zaddChildSibling0(componentRef.instance, options?.index);\r\n    }\r\n    else {\r\n      this.zaddChild0(componentRef.instance);\r\n    }\r\n\r\n    this.canvas.flow.addStep(componentRef.instance);\r\n\r\n    this.canvas.reRender();\r\n\r\n    return componentRef.instance;\r\n  }\r\n\r\n  /**\r\n   * Destroys this step component and updates all necessary child and parent relationships\r\n   * @param recursive \r\n   * @param checkCallbacks \r\n   */\r\n  destroy(recursive: boolean = true, checkCallbacks: boolean = true): boolean {\r\n\r\n    if (!checkCallbacks || this.canDeleteStep()) {\r\n      this.canvas.options.callbacks.beforeDeleteStep && \r\n      this.canvas.options.callbacks.beforeDeleteStep(this)\r\n      \r\n      let parentIndex;\r\n      if (this._parent) {\r\n        parentIndex = this._parent.removeChild(this);\r\n      }\r\n\r\n      this.destroy0(parentIndex, recursive);\r\n\r\n      this.canvas.reRender();\r\n\r\n      this.canvas.options.callbacks.afterDeleteStep && \r\n      this.canvas.options.callbacks.afterDeleteStep(this)\r\n\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * Remove a child from this step. Returns the index at which the child was found or -1 if not found.\r\n   * @param childToRemove Step component to remove\r\n   */\r\n  removeChild(childToRemove: NgFlowchartStepComponent): number {\r\n    if (!this.children) {\r\n      return -1;\r\n    }\r\n    const i = this.children.findIndex(child => child.id == childToRemove.id);\r\n    if (i > -1) {\r\n      this.children.splice(i, 1);\r\n    }\r\n\r\n    return i;\r\n  }\r\n\r\n  /**\r\n   * Re-parent this step\r\n   * @param newParent The new parent for this step\r\n   * @param force Force the re-parent if a parent already exists\r\n   */\r\n  setParent(newParent: NgFlowchartStepComponent, force: boolean = false): void {\r\n    if (this.parent && !force) {\r\n      console.warn('This child already has a parent, use force if you know what you are doing');\r\n      return;\r\n    }\r\n    this._parent = newParent;\r\n    if (!this._parent && this.arrow) {\r\n      this.arrow.destroy();\r\n      this.arrow = null;\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * Called when no longer trying to drop or move a step adjacent to this one\r\n   * @param position Position to render the icon\r\n   */\r\n  clearHoverIcons() {\r\n    this.nativeElement.removeAttribute(CONSTANTS.DROP_HOVER_ATTR);\r\n  }\r\n\r\n  /**\r\n   * Called when a step is trying to be dropped or moved adjacent to this step.\r\n   * @param position Position to render the icon\r\n   */\r\n  showHoverIcon(position: NgFlowchart.DropPosition) {\r\n    this.nativeElement.setAttribute(CONSTANTS.DROP_HOVER_ATTR, position.toLowerCase());\r\n  }\r\n\r\n  /**\r\n   * Is this the root element of the tree\r\n   */\r\n  isRootElement() {\r\n    return !this.parent;\r\n  }\r\n\r\n  /**\r\n   * Does this step have any children?\r\n   * @param count Optional count of children to check. Defaults to 1. I.E has at least 1 child.\r\n   */\r\n  hasChildren(count: number = 1) {\r\n    return this.children && this.children.length >= count;\r\n  }\r\n\r\n  /** Array of children steps for this step */\r\n  get children() {\r\n    return this._children;\r\n  }\r\n\r\n  /** The parent step of this step */\r\n  get parent() {\r\n    return this._parent;\r\n  }\r\n\r\n  /**\r\n   * Returns the total width extent (in pixels) of this node tree\r\n   * @param stepGap The current step gap for the flow canvas\r\n   */\r\n  getNodeTreeWidth(stepGap: number) {\r\n    const currentNodeWidth = this.nativeElement.getBoundingClientRect().width;\r\n\r\n    if (!this.hasChildren()) {\r\n      return this.nativeElement.getBoundingClientRect().width;\r\n    }\r\n\r\n    let childWidth = this._children.reduce((childTreeWidth, child) => {\r\n      return childTreeWidth += child.getNodeTreeWidth(stepGap);\r\n    }, 0)\r\n\r\n    childWidth += stepGap * (this._children.length - 1);\r\n\r\n    return Math.max(currentNodeWidth, childWidth);\r\n  }\r\n\r\n  /**\r\n   * Is this step currently hidden and unavailable as a drop location\r\n   */\r\n  isHidden() {\r\n    return this._isHidden;\r\n  }\r\n\r\n  /**\r\n   * Return current rect of this step. The position can be animated so getBoundingClientRect cannot \r\n   * be reliable for positions\r\n   * @param canvasRect Optional canvasRect to provide to offset the values\r\n   */\r\n  getCurrentRect(canvasRect?: DOMRect): Partial<DOMRect> {\r\n    let clientRect = this.nativeElement.getBoundingClientRect();\r\n\r\n    return {\r\n      bottom: this._currentPosition[1] + clientRect.height + (canvasRect?.top || 0),\r\n      left: this._currentPosition[0] + (canvasRect?.left || 0),\r\n      height: clientRect.height,\r\n      width: clientRect.width,\r\n      right: this._currentPosition[0] + clientRect.width + (canvasRect?.left || 0),\r\n      top: this._currentPosition[1] + (canvasRect?.top || 0)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Returns the JSON representation of this flow step\r\n   */\r\n  toJSON() {\r\n    return {\r\n      id: this.id,\r\n      type: this.type,\r\n      data: this.data,\r\n      children: this.hasChildren() ? this._children.map(child => {\r\n        return child.toJSON()\r\n      }) : []\r\n    }\r\n  }\r\n\r\n  /** The native HTMLElement of this step */\r\n  get nativeElement(): HTMLElement {\r\n    return this.view?.nativeElement;\r\n  }\r\n\r\n  setId(id) {\r\n    this._id = id;\r\n  }\r\n\r\n  zsetPosition(pos: number[], offsetCenter: boolean = false) {\r\n\r\n    if (!this.view) {\r\n      console.warn('Trying to set position before view init');\r\n      //save pos and set in after view init\r\n      this._initPosition = [...pos];\r\n      return;\r\n    }\r\n\r\n    let adjustedX = Math.max(pos[0] - (offsetCenter ? this.nativeElement.offsetWidth / 2 : 0), 0);\r\n    let adjustedY = Math.max(pos[1] - (offsetCenter ? this.nativeElement.offsetHeight / 2 : 0), 0);\r\n\r\n    this.nativeElement.style.left = `${adjustedX}px`;\r\n    this.nativeElement.style.top = `${adjustedY}px`;\r\n\r\n    this._currentPosition = [adjustedX, adjustedY];\r\n  }\r\n\r\n  zaddChild0(newChild: NgFlowchartStepComponent): boolean {\r\n    let oldChildIndex = null\r\n    if (newChild._parent) {\r\n      oldChildIndex = newChild._parent.removeChild(newChild);\r\n    }\r\n\r\n    if (this.hasChildren()) {\r\n      if (newChild.hasChildren()) {\r\n        //if we have children and the child has children we need to confirm the child doesnt have multiple children at any point\r\n        let newChildLastChild = newChild.findLastSingleChild();\r\n        if (!newChildLastChild) {\r\n          newChild._parent.zaddChildSibling0(newChild, oldChildIndex)\r\n          console.error('Invalid move. A node cannot have multiple parents');\r\n          return false;\r\n        }\r\n        //move the this nodes children to last child of the step arg\r\n        newChildLastChild.setChildren(this._children.slice());\r\n      }\r\n      else {\r\n        //move adjacent's children to newStep\r\n        newChild.setChildren(this._children.slice());\r\n      }\r\n\r\n    }\r\n    //finally reset this nodes to children to the single new child\r\n    this.setChildren([newChild]);\r\n    return true;\r\n  }\r\n\r\n  zaddChildSibling0(child: NgFlowchartStepComponent, index?: number): void {\r\n    if (child._parent) {\r\n      child._parent.removeChild(child);\r\n    }\r\n\r\n    if (!this.children) {\r\n      this._children = [];\r\n    }\r\n    if (index == null) {\r\n      this.children.push(child);\r\n    }\r\n    else {\r\n      this.children.splice(index, 0, child);\r\n    }\r\n\r\n    //since we are adding a new child here, it is safe to force set the parent\r\n    child.setParent(this, true);\r\n  }\r\n\r\n  zdrawArrow(start: number[], end: number[]) {\r\n    if (!this.arrow) {\r\n      this.createArrow();\r\n    }\r\n    this.arrow.instance.position = {\r\n      start: start,\r\n      end: end\r\n    };\r\n  }\r\n\r\n  ////////////////////////\r\n  // PRIVATE IMPL\r\n\r\n  private destroy0(parentIndex, recursive: boolean = true) {\r\n\r\n    this.compRef.destroy();\r\n    \r\n    // remove from master array\r\n    this.canvas.flow.removeStep(this)\r\n\r\n    if (this.isRootElement()) {\r\n      this.canvas.flow.rootStep = null;\r\n    }\r\n\r\n    if (this.hasChildren()) {\r\n\r\n      //this was the root node\r\n      if (this.isRootElement()) {\r\n\r\n        if (!recursive) {\r\n\r\n          let newRoot = this._children[0];\r\n          //set first child as new root\r\n          this.canvas.flow.rootStep = newRoot;\r\n          newRoot.setParent(null, true);\r\n\r\n          //make previous siblings children of the new root\r\n          if (this.hasChildren(2)) {\r\n            for (let i = 1; i < this._children.length; i++) {\r\n              let child = this._children[i];\r\n              child.setParent(newRoot, true);\r\n              newRoot._children.push(child);\r\n            }\r\n          }\r\n        }\r\n\r\n      }\r\n\r\n      //update children\r\n      let length = this._children.length;\r\n      for (let i = 0; i < length; i++) {\r\n        let child = this._children[i];\r\n        if (recursive) {\r\n          (child as NgFlowchartStepComponent).destroy0(null, true);\r\n        }\r\n\r\n        //not the original root node\r\n        else if (!!this._parent) {\r\n          this._parent._children.splice(i + parentIndex, 0, child);\r\n          child.setParent(this._parent, true);\r\n        }\r\n      }\r\n      this.setChildren([]);\r\n    }\r\n    this._parent = null;\r\n  }\r\n\r\n  private createArrow() {\r\n    const factory = this.compFactory.resolveComponentFactory(NgFlowchartArrowComponent)\r\n    this.arrow = this.viewContainer.createComponent(factory);\r\n    this.nativeElement.parentElement.appendChild(this.arrow.location.nativeElement);\r\n  }\r\n\r\n  private hideTree() {\r\n    this._isHidden = true;\r\n    this.nativeElement.style.opacity = '.4';\r\n\r\n    if (this.arrow) {\r\n      this.arrow.instance.hideArrow();\r\n    }\r\n\r\n    if (this.hasChildren()) {\r\n      this._children.forEach(child => {\r\n        child.hideTree();\r\n      })\r\n    }\r\n  }\r\n\r\n  private showTree() {\r\n    this._isHidden = false;\r\n\r\n    if (this.arrow) {\r\n      this.arrow.instance.showArrow();\r\n    }\r\n\r\n    this.nativeElement.style.opacity = '1';\r\n    if (this.hasChildren()) {\r\n      this._children.forEach(child => {\r\n        child.showTree();\r\n      })\r\n    }\r\n  }\r\n\r\n  private findLastSingleChild() {\r\n    //two or more children means we have no single child\r\n    if (this.hasChildren(2)) {\r\n      return null;\r\n    }\r\n    //if one child.. keep going down the tree until we find no children or 2 or more\r\n    else if (this.hasChildren()) {\r\n      return this._children[0].findLastSingleChild();\r\n    }\r\n    //if no children then this is the last single child\r\n    else return this;\r\n  }\r\n\r\n  private setChildren(children: Array<NgFlowchartStepComponent>): void {\r\n    this._children = children;\r\n    this.children.forEach(child => {\r\n      child.setParent(this, true);\r\n    })\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { NgFlowchart } from '../model/flow.model';\r\n\r\n@Injectable()\r\nexport class OptionsService {\r\n\r\n    private _options: NgFlowchart.Options;\r\n    private _callbacks: NgFlowchart.Callbacks = {};\r\n\r\n    constructor() {\r\n        this._options = new NgFlowchart.Options();\r\n    }\r\n\r\n    setOptions(options) {\r\n        this._options = this.sanitizeOptions(options);        \r\n    }\r\n\r\n    setCallbacks(callbacks) {\r\n        this._callbacks = callbacks;\r\n    }\r\n\r\n    get options() {\r\n        return this._options;\r\n    }\r\n\r\n    get callbacks() {\r\n        return this._callbacks;\r\n    }\r\n\r\n    private sanitizeOptions(options: NgFlowchart.Options): NgFlowchart.Options {\r\n        const defaultOpts = new NgFlowchart.Options();\r\n\r\n        options = {\r\n          ...defaultOpts,\r\n          ...options\r\n        };\r\n    \r\n        options.stepGap = Math.max(options.stepGap, 20) || 40;\r\n        options.hoverDeadzoneRadius = Math.max(options.hoverDeadzoneRadius, 0) || 20;\r\n    \r\n        return options;\r\n    }\r\n}","import { ComponentRef, Injectable, ViewContainerRef } from '@angular/core';\r\nimport { NgFlowchart } from '../model/flow.model';\r\nimport { CONSTANTS } from '../model/flowchart.constants';\r\nimport { CanvasFlow } from '../ng-flowchart-canvas.service';\r\nimport { NgFlowchartStepComponent } from '../ng-flowchart-step/ng-flowchart-step.component';\r\nimport { OptionsService } from './options.service';\r\n\r\nexport type DropProximity = {\r\n    step: NgFlowchartStepComponent,\r\n    position: NgFlowchart.DropPosition,\r\n    proximity: number\r\n};\r\n\r\n@Injectable()\r\nexport class CanvasRendererService {\r\n    private viewContainer: ViewContainerRef;\r\n\r\n    private scale: number = 1;\r\n    private scaleDebounceTimer = null\r\n\r\n    constructor(\r\n        private options: OptionsService\r\n    ) {\r\n\r\n    }\r\n\r\n    public init(viewContainer: ViewContainerRef) {\r\n        this.viewContainer = viewContainer;\r\n    }\r\n\r\n    public renderRoot(step: ComponentRef<NgFlowchartStepComponent>, dragEvent?: DragEvent) {\r\n        this.getCanvasContentElement().appendChild((step.location.nativeElement));\r\n        this.setRootPosition(step.instance, dragEvent);\r\n    }\r\n\r\n    public renderNonRoot(step: ComponentRef<NgFlowchartStepComponent>, dragEvent?: DragEvent) {\r\n        this.getCanvasContentElement().appendChild((step.location.nativeElement));\r\n    }\r\n\r\n    public updatePosition(step: NgFlowchartStepComponent, dragEvent: DragEvent) {\r\n        let relativeXY = this.getRelativeXY(dragEvent);\r\n\r\n        relativeXY = relativeXY.map(coord => coord / this.scale)\r\n        step.zsetPosition(relativeXY, true);\r\n    }\r\n\r\n    private getStepGap() {\r\n        return this.options.options.stepGap;\r\n    }\r\n\r\n    private renderChildTree(rootNode: NgFlowchartStepComponent, rootRect: Partial<DOMRect>, canvasRect: DOMRect) {\r\n        //the rootNode passed in is already rendered. just need to render its children /subtree\r\n\r\n        if (!rootNode.hasChildren()) {\r\n            return;\r\n        }\r\n\r\n        //top of the child row is simply the relative bottom of the root + stepGap\r\n        const childYTop = (rootRect.bottom - canvasRect.top * this.scale) + this.getStepGap();\r\n  \r\n        const rootWidth = rootRect.width / this.scale\r\n\r\n        const rootXCenter = (rootRect.left - canvasRect.left) + (rootWidth / 2);\r\n\r\n\r\n        //get the width of the child trees\r\n        let childTreeWidths = {};\r\n        let totalTreeWidth = 0;\r\n\r\n        rootNode.children.forEach(child => {\r\n            let totalChildWidth = child.getNodeTreeWidth(this.getStepGap());\r\n            totalChildWidth = totalChildWidth / this.scale\r\n            childTreeWidths[child.nativeElement.id] = totalChildWidth;\r\n\r\n            totalTreeWidth += totalChildWidth;\r\n        });\r\n\r\n        //add length for stepGaps between child trees\r\n        totalTreeWidth += (rootNode.children.length - 1) * this.getStepGap();\r\n\r\n        //if we have more than 1 child, we want half the extent on the left and half on the right\r\n        let leftXTree = rootXCenter - (totalTreeWidth / 2);\r\n        \r\n        // dont allow it to go negative since you cant scroll that way\r\n        leftXTree = Math.max(0, leftXTree)\r\n\r\n        rootNode.children.forEach(child => {\r\n\r\n            let childExtent = childTreeWidths[child.nativeElement.id];\r\n\r\n            let childLeft = leftXTree + (childExtent / 2) - (child.nativeElement.offsetWidth / 2);\r\n\r\n\r\n            child.zsetPosition([childLeft, childYTop]);\r\n\r\n            const currentChildRect = child.getCurrentRect(canvasRect);\r\n\r\n            const childWidth = currentChildRect.width / this.scale\r\n           \r\n            child.zdrawArrow(\r\n                [rootXCenter, (rootRect.bottom - canvasRect.top * this.scale)],\r\n                [currentChildRect.left + childWidth / 2 - canvasRect.left, currentChildRect.top - canvasRect.top]\r\n            );\r\n\r\n            this.renderChildTree(child, currentChildRect, canvasRect);\r\n            leftXTree += childExtent + this.getStepGap();\r\n        })\r\n\r\n    }\r\n\r\n\r\n    public render(flow: CanvasFlow, pretty?: boolean, skipAdjustDimensions = false) {\r\n        if (!flow.hasRoot()) {\r\n            if (this.options.options.zoom.mode === 'DISABLED') {\r\n                this.resetAdjustDimensions();\r\n                // Trigger afterRender to allow nested canvas to redraw parent canvas.\r\n                // Not sure if this scenario should also trigger beforeRender.\r\n                if (this.options.callbacks?.afterRender) {\r\n                    this.options.callbacks.afterRender()\r\n                }\r\n            }\r\n            return;\r\n        }\r\n\r\n        if (this.options.callbacks?.beforeRender) {\r\n            this.options.callbacks.beforeRender()\r\n        }\r\n\r\n        const canvasRect = this.getCanvasContentElement().getBoundingClientRect();\r\n        if (pretty) {\r\n            //this will place the root at the top center of the canvas and render from there\r\n            this.setRootPosition(flow.rootStep, null);\r\n        }\r\n        this.renderChildTree(flow.rootStep, flow.rootStep.getCurrentRect(canvasRect), canvasRect);\r\n        \r\n        if (!skipAdjustDimensions && this.options.options.zoom.mode === 'DISABLED') {\r\n            this.adjustDimensions(flow, canvasRect);\r\n        }\r\n\r\n        if (this.options.callbacks?.afterRender) {\r\n            this.options.callbacks.afterRender()\r\n        }\r\n    }\r\n\r\n    private resetAdjustDimensions(): void {\r\n        // reset canvas auto sizing to original size if empty\r\n        if (this.viewContainer) {\r\n            const canvasWrapper = this.getCanvasContentElement();\r\n            canvasWrapper.style.minWidth = null;\r\n            canvasWrapper.style.minHeight = null;\r\n        }\r\n    }\r\n           \r\n\r\n    private findDropLocationForHover(absMouseXY: number[], targetStep: NgFlowchartStepComponent, stepToDrop: NgFlowchart.Step): DropProximity | 'deadzone' | null {\r\n\r\n        if (!targetStep.shouldEvalDropHover(absMouseXY, stepToDrop)) {\r\n            return 'deadzone'\r\n        }\r\n\r\n        const stepRect = targetStep.nativeElement.getBoundingClientRect();\r\n\r\n        const yStepCenter = stepRect.bottom - stepRect.height / 2;\r\n        const xStepCenter = stepRect.left + stepRect.width / 2;\r\n\r\n        const yDiff = absMouseXY[1] - yStepCenter;\r\n        const xDiff = absMouseXY[0] - xStepCenter;\r\n\r\n        const absYDistance = Math.abs(yDiff);\r\n        const absXDistance = Math.abs(xDiff);\r\n\r\n        //#math class #Pythagoras\r\n        const distance = Math.sqrt(absYDistance * absYDistance + absXDistance * absXDistance);\r\n        const accuracyRadius = (stepRect.height + stepRect.width) / 2;\r\n\r\n        let result: DropProximity | 'deadzone' | null = null;\r\n\r\n        if (distance < accuracyRadius) {\r\n            if (distance < this.options.options.hoverDeadzoneRadius) {\r\n                //basically we are too close to the middle to accurately predict what position they want\r\n                result = 'deadzone';\r\n            }\r\n\r\n            if (absYDistance > absXDistance) {\r\n                result = {\r\n                    step: targetStep,\r\n                    position: yDiff > 0 ? 'BELOW' : 'ABOVE',\r\n                    proximity: absYDistance\r\n                };\r\n            }\r\n            else if (!this.options.options.isSequential && !targetStep.isRootElement()) {\r\n                result = {\r\n                    step: targetStep,\r\n                    position: xDiff > 0 ? 'RIGHT' : 'LEFT',\r\n                    proximity: absXDistance\r\n                };\r\n            }\r\n        }\r\n\r\n        if (result && result !== 'deadzone') {\r\n            if (!targetStep.getDropPositionsForStep(stepToDrop).includes(result.position)) {\r\n                //we had a valid drop but the target step doesnt allow this location\r\n                result = null;\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    private adjustDimensions(flow: CanvasFlow, canvasRect: DOMRect): void {\r\n        let maxRight = 0;\r\n        let maxBottom = 0;\r\n\r\n        //TODO this can be better\r\n        flow.steps.forEach(\r\n            ele => {\r\n                let rect = ele.getCurrentRect(canvasRect);\r\n                maxRight = Math.max(rect.right, maxRight);\r\n                maxBottom = Math.max(rect.bottom, maxBottom);\r\n            }\r\n        );\r\n\r\n        const widthBorderGap = 100;\r\n        const widthDiff = canvasRect.width - (maxRight - canvasRect.left);\r\n        if (widthDiff < widthBorderGap) {\r\n            let growWidth = widthBorderGap;\r\n            if(widthDiff < 0) {\r\n                growWidth += Math.abs(widthDiff);\r\n            }\r\n            this.getCanvasContentElement().style.minWidth = `${canvasRect.width + growWidth}px`;\r\n            if (this.options.options.centerOnResize) {\r\n                this.render(flow, true, true);\r\n            }\r\n        } else if(widthDiff > widthBorderGap) {\r\n            var totalTreeWidth = this.getTotalTreeWidth(flow);\r\n            if(this.isNestedCanvas()) {\r\n                this.getCanvasContentElement().style.minWidth = `${totalTreeWidth + widthBorderGap}px`;\r\n                if (this.options.options.centerOnResize) {\r\n                    this.render(flow, true, true);\r\n                }\r\n            } else if(this.getCanvasContentElement().style.minWidth) {\r\n                // reset normal canvas width if auto width set\r\n                this.getCanvasContentElement().style.minWidth = null;\r\n                if (this.options.options.centerOnResize) {\r\n                    this.render(flow, true, true);\r\n                }\r\n            }\r\n        }\r\n        \r\n        const heightBorderGap = 50;\r\n        const heightDiff = canvasRect.height - (maxBottom - canvasRect.top);\r\n        if (heightDiff < heightBorderGap) {\r\n            let growHeight = heightBorderGap;\r\n            if(heightDiff < 0) {\r\n                growHeight += Math.abs(heightDiff);\r\n            }\r\n            this.getCanvasContentElement().style.minHeight = `${canvasRect.height + growHeight}px`;\r\n        } else if(heightDiff > heightBorderGap){\r\n            if(this.isNestedCanvas()) {\r\n                let shrinkHeight = heightDiff - heightBorderGap;\r\n                this.getCanvasContentElement().style.minHeight = `${canvasRect.height - shrinkHeight}px`;\r\n            } else if(this.getCanvasContentElement().style.minHeight) {\r\n                // reset normal canvas height if auto height set\r\n                this.getCanvasContentElement().style.minHeight = null;\r\n            }\r\n        }\r\n    }\r\n\r\n    private getTotalTreeWidth(flow: CanvasFlow): number {\r\n        let totalTreeWidth = 0;\r\n        const rootWidth = flow.rootStep.getCurrentRect().width / this.scale;\r\n        flow.rootStep.children.forEach(child => {\r\n            let totalChildWidth = child.getNodeTreeWidth(this.getStepGap());\r\n            totalTreeWidth += totalChildWidth / this.scale;\r\n        });\r\n        totalTreeWidth += (flow.rootStep.children.length - 1) * this.getStepGap();\r\n        // total tree width doesn't give root width\r\n        return Math.max(totalTreeWidth, rootWidth);\r\n    }\r\n\r\n    private findBestMatchForSteps(dragStep: NgFlowchart.Step, event: DragEvent, steps: ReadonlyArray<NgFlowchartStepComponent>): DropProximity | null {\r\n        const absXY = [event.clientX, event.clientY];\r\n\r\n        let bestMatch: DropProximity = null;\r\n\r\n        for (let i = 0; i < steps.length; i++) {\r\n\r\n            const step = steps[i];\r\n\r\n            if (step.isHidden()) {\r\n                continue;\r\n            }\r\n\r\n            const position = this.findDropLocationForHover(absXY, step, dragStep);\r\n            if (position) {\r\n                if (position == 'deadzone') {\r\n                    bestMatch = null;\r\n                    break;\r\n                }\r\n                //if this step is closer than previous best match then we have a new best\r\n                else if (bestMatch == null || bestMatch.proximity > position.proximity) {\r\n                    bestMatch = position;\r\n                }\r\n            }\r\n        }\r\n\r\n        return bestMatch\r\n    }\r\n\r\n    public findAndShowClosestDrop(dragStep: NgFlowchart.Step, event: DragEvent, steps: ReadonlyArray<NgFlowchartStepComponent>): NgFlowchart.DropTarget {\r\n        if (!steps || steps.length == 0) {\r\n            return;\r\n        }\r\n\r\n        let bestMatch: DropProximity = this.findBestMatchForSteps(dragStep, event, steps);\r\n\r\n        // TODO make this more efficient. two loops\r\n        steps.forEach(step => {\r\n            if (bestMatch == null || step.nativeElement.id !== bestMatch.step.nativeElement.id) {\r\n\r\n                step.clearHoverIcons();\r\n            }\r\n        })\r\n\r\n        if (!bestMatch) {\r\n            return;\r\n        }\r\n\r\n        bestMatch.step.showHoverIcon(bestMatch.position);\r\n\r\n        return {\r\n            step: bestMatch.step,\r\n            position: bestMatch.position\r\n        };\r\n    }\r\n\r\n    public showSnaps(dragStep: NgFlowchart.PendingStep) {\r\n\r\n\r\n    }\r\n\r\n    public clearAllSnapIndicators(steps: ReadonlyArray<NgFlowchartStepComponent>) {\r\n        steps.forEach(\r\n            step => step.clearHoverIcons()\r\n        )\r\n    }\r\n\r\n    private setRootPosition(step: NgFlowchartStepComponent, dragEvent?: DragEvent) {\r\n\r\n        if (!dragEvent) {\r\n            const canvasTop = this.getCanvasTopCenterPosition(step.nativeElement);\r\n            step.zsetPosition(canvasTop, true)\r\n            return;\r\n        }\r\n\r\n        switch (this.options.options.rootPosition) {\r\n            case 'CENTER':\r\n                const canvasCenter = this.getCanvasCenterPosition();\r\n                step.zsetPosition(canvasCenter, true);\r\n                return;\r\n            case 'TOP_CENTER':\r\n                const canvasTop = this.getCanvasTopCenterPosition(step.nativeElement);\r\n                step.zsetPosition(canvasTop, true)\r\n                return;\r\n            default:\r\n                const relativeXY = this.getRelativeXY(dragEvent);\r\n                step.zsetPosition(relativeXY, true);\r\n                return;\r\n        }\r\n    }\r\n\r\n    private getRelativeXY(dragEvent: DragEvent) {\r\n        const canvasRect = this.getCanvasContentElement().getBoundingClientRect();\r\n\r\n        return [\r\n            dragEvent.clientX - canvasRect.left,\r\n            dragEvent.clientY - canvasRect.top\r\n        ]\r\n    }\r\n\r\n    private getCanvasTopCenterPosition(htmlRootElement: HTMLElement) {\r\n        const canvasRect = this.getCanvasContentElement().getBoundingClientRect();\r\n        const rootElementHeight = htmlRootElement.getBoundingClientRect().height\r\n        const yCoord = rootElementHeight / 2 + this.options.options.stepGap\r\n        const scaleYOffset = (1 - this.scale) * 100\r\n            \r\n        return [\r\n            canvasRect.width / (this.scale * 2),\r\n            yCoord + scaleYOffset\r\n        ]\r\n    }\r\n\r\n    private getCanvasCenterPosition() {\r\n        const canvasRect = this.getCanvasContentElement().getBoundingClientRect();\r\n        return [\r\n            canvasRect.width / 2,\r\n            canvasRect.height / 2\r\n        ]\r\n    }\r\n\r\n    private getCanvasContentElement(): HTMLElement {\r\n        const canvas = this.viewContainer.element.nativeElement as HTMLElement;\r\n        let canvasContent = canvas.getElementsByClassName(CONSTANTS.CANVAS_CONTENT_CLASS).item(0);\r\n        return canvasContent as HTMLElement;\r\n    }\r\n\r\n    private isNestedCanvas(): boolean {\r\n        if (this.viewContainer) {\r\n            const canvasWrapper = (this.viewContainer.element.nativeElement as HTMLElement).parentElement;\r\n            if (canvasWrapper) {\r\n                return canvasWrapper.classList.contains('ngflowchart-step-wrapper');\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    public resetScale(flow: CanvasFlow) {\r\n        this.setScale(flow, 1)\r\n    }\r\n\r\n    public scaleUp(flow: CanvasFlow, step? : number) {\r\n        const newScale = this.scale + (this.scale * step || this.options.options.zoom.defaultStep)\r\n        this.setScale(flow, newScale)\r\n       \r\n    }\r\n\r\n    public scaleDown(flow: CanvasFlow, step? : number) {\r\n        const newScale = this.scale - (this.scale * step || this.options.options.zoom.defaultStep)\r\n        this.setScale(flow, newScale)\r\n    }\r\n\r\n    public setScale(flow: CanvasFlow, scaleValue: number) {\r\n        const minDimAdjust = `${1/scaleValue * 100}%`\r\n\r\n        const canvasContent = this.getCanvasContentElement()\r\n\r\n        canvasContent.style.transform = `scale(${scaleValue})`;\r\n        canvasContent.style.minHeight = minDimAdjust\r\n        canvasContent.style.minWidth = minDimAdjust\r\n        canvasContent.style.transformOrigin = 'top left'\r\n        canvasContent.classList.add('scaling')\r\n\r\n        this.scale = scaleValue\r\n        this.render(flow, true)\r\n\r\n        if(this.options.callbacks?.afterScale) {\r\n            this.options.callbacks.afterScale(this.scale)\r\n        }\r\n        \r\n        this.scaleDebounceTimer && clearTimeout(this.scaleDebounceTimer)\r\n        this.scaleDebounceTimer = setTimeout(() => {\r\n            canvasContent.classList.remove('scaling')\r\n        }, 300)\r\n\r\n    }\r\n\r\n\r\n}","import { Injectable } from \"@angular/core\";\r\nimport { NgFlowchart } from '../model/flow.model';\r\n\r\n\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class DropDataService {\r\n\r\n    dragStep: NgFlowchart.PendingStep | NgFlowchart.MoveStep;\r\n\r\n    constructor() {\r\n    }\r\n\r\n    public setDragStep(ref: NgFlowchart.PendingStep) {\r\n        this.dragStep = ref;\r\n    }\r\n\r\n    public getDragStep() {\r\n        return this.dragStep;\r\n    }\r\n}","import { Injectable, TemplateRef, Type } from '@angular/core';\r\nimport { NgFlowchartStepComponent } from './ng-flowchart-step/ng-flowchart-step.component';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class NgFlowchartStepRegistry {\r\n    \r\n    private registry = new Map<string, Type<NgFlowchartStepComponent> | TemplateRef<any>>();\r\n    \r\n    constructor() {\r\n\r\n    }\r\n\r\n    /**\r\n     * Register a step implementation. Only needed if you are uploading a flow from json\r\n     * @param type The unique type of the step\r\n     * @param step The step templateRef or component type to create for this key\r\n     */\r\n    registerStep(type: string, step: Type<NgFlowchartStepComponent> | TemplateRef<any>) {\r\n        this.registry.set(type, step);\r\n    }\r\n\r\n    getStepImpl(type: string): Type<NgFlowchartStepComponent> | TemplateRef<any> | null {\r\n        return this.registry.get(type);\r\n    }\r\n\r\n\r\n}","import { ComponentFactoryResolver, ComponentRef, Injectable, TemplateRef, Type, ViewContainerRef } from '@angular/core';\r\nimport { NgFlowchart } from '../model/flow.model';\r\nimport { NgFlowchartCanvasService } from '../ng-flowchart-canvas.service';\r\nimport { NgFlowchartStepRegistry } from '../ng-flowchart-step-registry.service';\r\nimport { NgFlowchartStepComponent } from '../ng-flowchart-step/ng-flowchart-step.component';\r\nimport { DropDataService } from './dropdata.service';\r\n\r\n/**\r\n * This service handles adding new steps to the canvas\r\n */\r\n@Injectable()\r\nexport class StepManagerService {\r\n\r\n  private viewContainer: ViewContainerRef;\r\n\r\n  constructor(private componentFactoryResolver: ComponentFactoryResolver, private registry: NgFlowchartStepRegistry) {\r\n\r\n  }\r\n\r\n  public init(viewContainer: ViewContainerRef) {\r\n    this.viewContainer = viewContainer;\r\n  }\r\n\r\n  public createFromRegistry(id: string, type: string, data: any, canvas: NgFlowchartCanvasService): ComponentRef<NgFlowchartStepComponent> {\r\n    let templateComp = this.registry.getStepImpl(type);\r\n    let compRef: ComponentRef<NgFlowchartStepComponent>;\r\n    if (templateComp instanceof TemplateRef || templateComp instanceof Type) {\r\n      compRef = this.create({\r\n        template: templateComp,\r\n        type: type,\r\n        data: data\r\n      }, canvas);\r\n    }\r\n    else {\r\n      throw 'Invalid registry implementation found for type ' + type;\r\n    }\r\n\r\n    compRef.instance.setId(id);\r\n    return compRef;\r\n  }\r\n\r\n  public create(pendingStep: NgFlowchart.PendingStep, canvas: NgFlowchartCanvasService): ComponentRef<NgFlowchartStepComponent> {\r\n    let componentRef: ComponentRef<NgFlowchartStepComponent>;\r\n\r\n    if (pendingStep.template instanceof TemplateRef) {\r\n      const factory = this.componentFactoryResolver.resolveComponentFactory(NgFlowchartStepComponent);\r\n      componentRef = this.viewContainer.createComponent<NgFlowchartStepComponent>(factory);\r\n      componentRef.instance.contentTemplate = pendingStep.template;\r\n      \r\n    }\r\n    else {\r\n      const factory = this.componentFactoryResolver.resolveComponentFactory(pendingStep.template);\r\n      componentRef = this.viewContainer.createComponent<any>(factory);\r\n    }\r\n    \r\n    componentRef.instance.data = JSON.parse(JSON.stringify(pendingStep.data));\r\n    componentRef.instance.type = pendingStep.type;\r\n    componentRef.instance.canvas = canvas;\r\n    componentRef.instance.compRef = componentRef;\r\n    componentRef.instance.init(\r\n      componentRef.injector.get(DropDataService),\r\n      componentRef.injector.get(ViewContainerRef),\r\n      componentRef.injector.get(ComponentFactoryResolver)\r\n    )\r\n    \r\n\r\n    return componentRef;\r\n  }\r\n}\r\n","import { ComponentRef, Injectable, ViewContainerRef } from '@angular/core';\r\nimport { NgFlowchart } from './model/flow.model';\r\nimport { NgFlowchartStepComponent } from './ng-flowchart-step/ng-flowchart-step.component';\r\nimport { CanvasRendererService } from './services/canvas-renderer.service';\r\nimport { DropDataService as DragService } from './services/dropdata.service';\r\nimport { OptionsService } from './services/options.service';\r\nimport { StepManagerService } from './services/step-manager.service';\r\n\r\ntype DropResponse = {\r\n  added: boolean,\r\n  prettyRender: boolean\r\n}\r\n\r\nexport class CanvasFlow {\r\n  rootStep: NgFlowchartStepComponent;\r\n\r\n  // steps from this canvas only\r\n  private _steps: NgFlowchartStepComponent[] = [];\r\n\r\n  hasRoot() {\r\n    return !!this.rootStep;\r\n  }\r\n\r\n  addStep(step: NgFlowchartStepComponent) {\r\n    this._steps.push(step)\r\n  }\r\n\r\n  removeStep(step: NgFlowchartStepComponent) {\r\n\r\n    let index = this._steps.findIndex(ele => ele.id == step.id);\r\n    if (index >= 0) {\r\n      this._steps.splice(index, 1);\r\n    }\r\n  }\r\n\r\n  get steps(): ReadonlyArray<NgFlowchartStepComponent> {\r\n    return this._steps;\r\n  }\r\n\r\n  constructor() {\r\n\r\n  }\r\n}\r\n\r\n@Injectable()\r\nexport class NgFlowchartCanvasService {\r\n\r\n  viewContainer: ViewContainerRef;\r\n  isDragging: boolean = false;\r\n\r\n  currentDropTarget: NgFlowchart.DropTarget;\r\n\r\n  flow: CanvasFlow = new CanvasFlow();\r\n\r\n  _disabled: boolean = false;\r\n\r\n  get disabled() {\r\n    return this._disabled;\r\n  }\r\n\r\n  noParentError = {\r\n    code: 'NO_PARENT',\r\n    message: 'Step was not dropped under a parent and is not the root node'\r\n  };\r\n\r\n  constructor(\r\n    private drag: DragService,\r\n    public options: OptionsService,\r\n    private renderer: CanvasRendererService,\r\n    private stepmanager: StepManagerService\r\n  ) {\r\n\r\n\r\n  }\r\n\r\n  public init(view: ViewContainerRef) {\r\n    this.viewContainer = view;\r\n    this.renderer.init(view);\r\n    this.stepmanager.init(view);\r\n\r\n    //hack to load the css\r\n    let ref = this.stepmanager.create({\r\n      template: NgFlowchartStepComponent,\r\n      type: '',\r\n      data: null\r\n    }, this);\r\n    const i = this.viewContainer.indexOf(ref.hostView)\r\n    this.viewContainer.remove(i);\r\n\r\n  }\r\n\r\n  public moveStep(drag: DragEvent, id: any) {\r\n    this.renderer.clearAllSnapIndicators(this.flow.steps);\r\n\r\n    let step: NgFlowchartStepComponent = this.flow.steps.find(step => step.nativeElement.id === id);\r\n    let error = {};\r\n    if(!step) {\r\n      // step cannot be moved if not in this canvas\r\n      return;\r\n    }\r\n    if (step.canDrop(this.currentDropTarget, error)) {\r\n      if (step.isRootElement()) {\r\n        this.renderer.updatePosition(step, drag);\r\n        this.renderer.render(this.flow);\r\n      }\r\n      else if (this.currentDropTarget) {\r\n        const response = this.addStepToFlow(step, this.currentDropTarget, true);\r\n        this.renderer.render(this.flow, response.prettyRender);\r\n      }\r\n      else {\r\n        this.moveError(step, this.noParentError);\r\n      }\r\n      if (this.options.callbacks?.onDropStep && (this.currentDropTarget || step.isRootElement())) {\r\n        this.options.callbacks.onDropStep({\r\n          isMove: true,\r\n          step: step,\r\n          parent: step.parent\r\n        })\r\n      }\r\n    }\r\n    else {\r\n      this.moveError(step, error);\r\n    }\r\n\r\n  }\r\n\r\n\r\n\r\n  public async onDrop(drag: DragEvent) {\r\n    this.renderer.clearAllSnapIndicators(this.flow.steps);\r\n\r\n    if (this.flow.hasRoot() && !this.currentDropTarget) {\r\n      this.dropError(this.noParentError);\r\n      return;\r\n    }\r\n\r\n    //TODO just pass dragStep here, but come up with a better name and move the type to flow.model\r\n    let componentRef = await this.createStep(this.drag.dragStep as NgFlowchart.PendingStep);\r\n\r\n    const dropTarget = this.currentDropTarget || null;\r\n    let error = {};\r\n    if (componentRef.instance.canDrop(dropTarget, error)) {\r\n      if (!this.flow.hasRoot()) {\r\n        this.renderer.renderRoot(componentRef, drag);\r\n        this.setRoot(componentRef.instance);\r\n      }\r\n      else {\r\n         // if root is replaced by another step, rerender root to proper position\r\n         if(dropTarget.step.isRootElement() && dropTarget.position === 'ABOVE') {\r\n          this.renderer.renderRoot(componentRef, drag);\r\n        }\r\n        this.addChildStep(componentRef, dropTarget);\r\n      }\r\n\r\n      if (this.options.callbacks?.onDropStep) {\r\n        this.options.callbacks.onDropStep({\r\n          step: componentRef.instance,\r\n          isMove: false,\r\n          parent: componentRef.instance.parent\r\n        })\r\n      }\r\n    }\r\n    else {\r\n      const i = this.viewContainer.indexOf(componentRef.hostView)\r\n      this.viewContainer.remove(i);\r\n      this.dropError(error);\r\n    }\r\n  }\r\n\r\n\r\n  public onDragStart(drag: DragEvent) {\r\n\r\n    this.isDragging = true;\r\n\r\n    this.currentDropTarget = this.renderer.findAndShowClosestDrop(this.drag.dragStep, drag, this.flow.steps);\r\n  }\r\n\r\n  public createStepFromType(id: string, type: string, data: any): Promise<ComponentRef<NgFlowchartStepComponent>> {\r\n    let compRef = this.stepmanager.createFromRegistry(id, type, data, this);\r\n    return new Promise((resolve) => {\r\n      let sub = compRef.instance.viewInit.subscribe(async () => {\r\n        sub.unsubscribe();\r\n        setTimeout(() => {\r\n          compRef.instance.onUpload(data)\r\n        })\r\n        resolve(compRef);\r\n      })\r\n    })\r\n  }\r\n\r\n  public createStep(pending: NgFlowchart.PendingStep): Promise<ComponentRef<NgFlowchartStepComponent>> {\r\n    let componentRef: ComponentRef<NgFlowchartStepComponent>;\r\n\r\n    componentRef = this.stepmanager.create(pending, this);\r\n\r\n    return new Promise((resolve) => {\r\n      let sub = componentRef.instance.viewInit.subscribe(() => {\r\n        sub.unsubscribe();\r\n        resolve(componentRef);\r\n      }, error => console.error(error))\r\n    })\r\n  }\r\n\r\n  public resetScale() {\r\n    if(this.options.options.zoom.mode === 'DISABLED') {\r\n      return\r\n    }\r\n    this.renderer.resetScale(this.flow)\r\n  }\r\n\r\n  public scaleUp(step?: number) {\r\n    if(this.options.options.zoom.mode === 'DISABLED') {\r\n      return\r\n    }\r\n    this.renderer.scaleUp(this.flow, step);\r\n\r\n  }\r\n\r\n  public scaleDown(step?: number) {\r\n    if(this.options.options.zoom.mode === 'DISABLED') {\r\n      return\r\n    }\r\n    this.renderer.scaleDown(this.flow, step);\r\n\r\n  }\r\n\r\n  public setScale(scaleValue: number) {\r\n    if(this.options.options.zoom.mode === 'DISABLED') {\r\n      return\r\n    }\r\n    this.renderer.setScale(this.flow, scaleValue)\r\n  }\r\n\r\n\r\n  addChildStep(componentRef: ComponentRef<NgFlowchartStepComponent>, dropTarget: NgFlowchart.DropTarget) {\r\n    this.addToCanvas(componentRef);\r\n    const response = this.addStepToFlow(componentRef.instance, dropTarget);\r\n    this.renderer.render(this.flow, response.prettyRender);\r\n  }\r\n\r\n  addToCanvas(componentRef: ComponentRef<NgFlowchartStepComponent>) {\r\n    this.renderer.renderNonRoot(componentRef);\r\n  }\r\n\r\n  reRender(pretty?: boolean) {\r\n    this.renderer.render(this.flow, pretty);\r\n  }\r\n\r\n  async upload(root: any) {\r\n    await this.uploadNode(root);\r\n    this.reRender(true);\r\n  }\r\n\r\n  private async uploadNode(node: any, parentNode?: NgFlowchartStepComponent): Promise<NgFlowchartStepComponent> {\r\n    if(!node){\r\n      // no node to upload when uploading empty nested flow\r\n      return;\r\n    }\r\n\r\n    let comp = await this.createStepFromType(node.id, node.type, node.data);\r\n    if (!parentNode) {\r\n      this.setRoot(comp.instance);\r\n      this.renderer.renderRoot(comp, null);\r\n    }\r\n    else {\r\n      this.renderer.renderNonRoot(comp);\r\n      this.flow.addStep(comp.instance);\r\n    }\r\n\r\n    for (let i = 0; i < node.children.length; i++) {\r\n      let child = node.children[i];\r\n      let childComp = await this.uploadNode(child, comp.instance);\r\n      comp.instance.children.push(childComp);\r\n      childComp.setParent(comp.instance, true);\r\n    }\r\n\r\n    return comp.instance;\r\n  }\r\n\r\n  private setRoot(step: NgFlowchartStepComponent, force: boolean = true) {\r\n    if (this.flow.hasRoot()) {\r\n      if (!force) {\r\n        console.warn('Already have a root and force is false');\r\n        return;\r\n      }\r\n\r\n      //reparent root\r\n      let oldRoot = this.flow.rootStep;\r\n      this.flow.rootStep = step;\r\n      step.zaddChild0(oldRoot);\r\n    }\r\n    else {\r\n      this.flow.rootStep = step;\r\n    }\r\n\r\n    this.flow.addStep(step);\r\n  }\r\n\r\n  private addStepToFlow(step: NgFlowchartStepComponent, dropTarget: NgFlowchart.DropTarget, isMove = false): DropResponse {\r\n\r\n    let response = {\r\n        added: false,\r\n        prettyRender: false,\r\n    };\r\n\r\n    switch (dropTarget.position) {\r\n      case 'ABOVE':\r\n        response = this.placeStepAbove(step, dropTarget.step);\r\n        break;\r\n      case 'BELOW':\r\n        response = this.placeStepBelow(step, dropTarget.step);\r\n        console.log(response, [...dropTarget.step.children])\r\n        break;\r\n      case 'LEFT':\r\n        response = this.placeStepAdjacent(step, dropTarget.step, true);\r\n        break;\r\n      case 'RIGHT':\r\n        response = this.placeStepAdjacent(step, dropTarget.step, false);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    if (!isMove && response.added) {\r\n      this.flow.addStep(step);\r\n    }\r\n    return response;\r\n  }\r\n\r\n  private placeStepBelow(newStep: NgFlowchartStepComponent, parentStep: NgFlowchartStepComponent): DropResponse {\r\n    return {\r\n      added: parentStep.zaddChild0(newStep),\r\n      prettyRender: false,\r\n    }\r\n  }\r\n\r\n  private placeStepAdjacent(newStep: NgFlowchartStepComponent, siblingStep: NgFlowchartStepComponent, isLeft: boolean = true): DropResponse {\r\n    if (siblingStep.parent) {\r\n      //find the adjacent steps index in the parents child array\r\n      const adjacentIndex = siblingStep.parent.children.findIndex(child => child.nativeElement.id == siblingStep.nativeElement.id);\r\n      siblingStep.parent.zaddChildSibling0(newStep, adjacentIndex + (isLeft ? 0 : 1));\r\n    }\r\n    else {\r\n      console.warn('Parallel actions must have a common parent');\r\n      return {\r\n        added: false,\r\n        prettyRender: false,\r\n      };\r\n    }\r\n    return {\r\n      added: true,\r\n      prettyRender: false,\r\n    };\r\n  }\r\n\r\n  private placeStepAbove(newStep: NgFlowchartStepComponent, childStep: NgFlowchartStepComponent): DropResponse {\r\n    let prettyRender = false\r\n    let newParent = childStep.parent;\r\n    if (newParent) {\r\n      //we want to remove child and insert our newStep at the same index\r\n      let index = newParent.removeChild(childStep);\r\n      newStep.zaddChild0(childStep);\r\n      newParent.zaddChild0(newStep);\r\n    }\r\n    else { // new root node\r\n      newStep.parent?.removeChild(newStep)\r\n      newStep.setParent(null, true)\r\n      \r\n      //if the new step was a direct child of the root step, we need to break that connection\r\n      childStep.removeChild(newStep)\r\n      this.setRoot(newStep);\r\n\r\n      prettyRender = true\r\n      \r\n    }\r\n    return {\r\n      added: true,\r\n      prettyRender\r\n    };\r\n  }\r\n\r\n  private dropError(error: NgFlowchart.ErrorMessage) {\r\n    if (this.options.callbacks?.onDropError) {\r\n      let parent = this.currentDropTarget?.position !== 'BELOW' ? this.currentDropTarget?.step.parent : this.currentDropTarget?.step\r\n      this.options.callbacks.onDropError({\r\n        step: (this.drag.dragStep as NgFlowchart.PendingStep),\r\n        parent: parent || null,\r\n        error: error\r\n      })\r\n    }\r\n  }\r\n\r\n  private moveError(step: NgFlowchartStepComponent, error) {\r\n    if (this.options.callbacks?.onMoveError) {\r\n      let parent = this.currentDropTarget?.position !== 'BELOW' ? this.currentDropTarget?.step.parent : this.currentDropTarget?.step\r\n      this.options.callbacks.onMoveError({\r\n        step: {\r\n          instance: step,\r\n          type: step.type,\r\n          data: step.data\r\n        },\r\n        parent: parent,\r\n        error: error\r\n      })\r\n    }\r\n  }\r\n}\r\n","import { AfterViewInit, Directive, ElementRef, HostBinding, HostListener, Input, OnDestroy, OnInit, ViewContainerRef } from '@angular/core';\r\nimport { NgFlowchart } from './model/flow.model';\r\nimport { CONSTANTS } from './model/flowchart.constants';\r\nimport { NgFlowchartCanvasService } from './ng-flowchart-canvas.service';\r\nimport { CanvasRendererService } from './services/canvas-renderer.service';\r\nimport { OptionsService } from './services/options.service';\r\nimport { StepManagerService } from './services/step-manager.service';\r\n\r\n\r\n\r\n@Directive({\r\n    selector: '[ngFlowchartCanvas]',\r\n    providers: [\r\n        NgFlowchartCanvasService,\r\n        StepManagerService,\r\n        OptionsService,\r\n        CanvasRendererService\r\n    ]\r\n})\r\nexport class NgFlowchartCanvasDirective implements OnInit, OnDestroy, AfterViewInit {\r\n\r\n    @HostListener('drop', ['$event'])\r\n    protected onDrop(event: DragEvent) {\r\n        if (this._disabled) { return; }\r\n\r\n        // its possible multiple canvases exist so make sure we only move/drop on the closest one\r\n        const closestCanvasId = (event.target as HTMLElement).closest('.ngflowchart-canvas-content')?.id\r\n        if (this._id !== closestCanvasId) {\r\n            return;\r\n        }\r\n\r\n        const type = event.dataTransfer.getData('type');\r\n        if ('FROM_CANVAS' == type) {\r\n            this.canvas.moveStep(event, event.dataTransfer.getData('id'));\r\n        }\r\n        else {\r\n            this.canvas.onDrop(event);\r\n        }\r\n\r\n    }\r\n\r\n    @HostListener('dragover', ['$event'])\r\n    protected onDragOver(event: DragEvent) {\r\n        event.preventDefault();\r\n        if (this._disabled) { return; }\r\n        this.canvas.onDragStart(event);\r\n    }\r\n\r\n    _options: NgFlowchart.Options;\r\n    _callbacks: NgFlowchart.Callbacks;\r\n\r\n    @HostListener('window:resize', ['$event'])\r\n    protected onResize(event) {\r\n        if (this._options.centerOnResize) {\r\n            this.canvas.reRender(true);\r\n        }\r\n    }\r\n\r\n    @HostListener('wheel', ['$event'])\r\n    protected onZoom(event) {\r\n        if (this._options.zoom.mode === 'WHEEL') {\r\n            this.adjustWheelScale(event)\r\n        }\r\n    }\r\n\r\n    @Input('ngFlowchartCallbacks')\r\n    set callbacks(callbacks: NgFlowchart.Callbacks) {\r\n        this.optionService.setCallbacks(callbacks);\r\n    }\r\n\r\n    @Input('ngFlowchartOptions')\r\n    set options(options: NgFlowchart.Options) {\r\n        this.optionService.setOptions(options);\r\n        this._options = this.optionService.options;\r\n        this.canvas.reRender();\r\n\r\n    }\r\n\r\n    get options() {\r\n        return this._options\r\n    }\r\n\r\n    @Input('disabled')\r\n    @HostBinding('attr.disabled')\r\n    set disabled(val: boolean) {\r\n        this._disabled = val !== false;\r\n        if (this.canvas) {\r\n            this.canvas._disabled = this._disabled;\r\n        }\r\n    }\r\n\r\n    get disabled() {\r\n        return this._disabled;\r\n    }\r\n\r\n    private _disabled: boolean = false;\r\n    private _id: string = null\r\n    private canvasContent: HTMLElement;\r\n\r\n    constructor(\r\n        protected canvasEle: ElementRef<HTMLElement>,\r\n        private viewContainer: ViewContainerRef,\r\n        private canvas: NgFlowchartCanvasService,\r\n        private optionService: OptionsService\r\n    ) {\r\n\r\n        this.canvasEle.nativeElement.classList.add(CONSTANTS.CANVAS_CLASS);\r\n        this.canvasContent = this.createCanvasContent(this.viewContainer);\r\n        this._id = this.canvasContent.id\r\n\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.canvas.init(this.viewContainer);\r\n        if (!this._options) {\r\n            this.options = new NgFlowchart.Options();\r\n        }\r\n\r\n        this.canvas._disabled = this._disabled;\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n\r\n    }\r\n\r\n    ngOnDestroy() {\r\n\r\n        for (let i = 0; i < this.viewContainer.length; i++) {\r\n            this.viewContainer.remove(i)\r\n        }\r\n        this.canvasEle.nativeElement.remove()\r\n        this.viewContainer.element.nativeElement.remove()\r\n        this.viewContainer = undefined\r\n    }\r\n\r\n    private createCanvasContent(viewContainer: ViewContainerRef): HTMLElement {\r\n        const canvasId = 'c' + Date.now();\r\n\r\n        let canvasEle = viewContainer.element.nativeElement as HTMLElement;\r\n        let canvasContent = document.createElement('div');\r\n        canvasContent.id = canvasId;\r\n        canvasContent.classList.add(CONSTANTS.CANVAS_CONTENT_CLASS);\r\n        canvasEle.appendChild(canvasContent);\r\n        return canvasContent\r\n    }\r\n\r\n    /**\r\n     * Returns the Flow object representing this flow chart.\r\n     */\r\n    public getFlow() {\r\n        return new NgFlowchart.Flow(this.canvas);\r\n    }\r\n\r\n    public scaleDown() {\r\n        this.canvas.scaleDown()\r\n    }\r\n\r\n    public scaleUp() {\r\n        this.canvas.scaleUp()\r\n    }\r\n\r\n    public setScale(scaleValue: number) {\r\n        \r\n        const scaleVal = Math.max(0, scaleValue)\r\n        this.canvas.setScale(scaleVal)\r\n    }\r\n\r\n    private adjustWheelScale(event) {\r\n\r\n        if (this.canvas.flow.hasRoot()) {\r\n            event.preventDefault();\r\n            // scale down / zoom out\r\n            if (event.deltaY > 0) {\r\n                this.scaleDown()\r\n            }\r\n            // scale up / zoom in\r\n            else if (event.deltaY < 0) {\r\n                this.scaleUp()\r\n            }\r\n\r\n        }\r\n    };\r\n}","import { AfterViewInit, Directive, ElementRef, HostListener, Input } from '@angular/core';\r\nimport { NgFlowchart } from './model/flow.model';\r\nimport { DropDataService } from './services/dropdata.service';\r\n\r\n@Directive({\r\n    selector: '[ngFlowchartStep]'\r\n})\r\nexport class NgFlowchartStepDirective implements AfterViewInit {\r\n\r\n    @HostListener('dragstart', ['$event'])\r\n    onDragStart(event: DragEvent) {\r\n        this.data.setDragStep(this.flowStep);\r\n        event.dataTransfer.setData('type', 'FROM_PALETTE');\r\n    }\r\n\r\n    @HostListener('dragend', ['$event'])\r\n    onDragEnd(event: DragEvent) {\r\n        \r\n        this.data.setDragStep(null);\r\n       \r\n    }\r\n\r\n    @Input('ngFlowchartStep')\r\n    flowStep: NgFlowchart.PendingStep;\r\n\r\n    constructor(\r\n        protected element: ElementRef<HTMLElement>,\r\n        private data: DropDataService\r\n    ) {\r\n        this.element.nativeElement.setAttribute('draggable', 'true');\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n    }\r\n}","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { NgFlowchartArrowComponent } from './ng-flowchart-arrow/ng-flowchart-arrow.component';\r\nimport { NgFlowchartCanvasDirective } from './ng-flowchart-canvas.directive';\r\nimport { NgFlowchartStepDirective } from './ng-flowchart-step.directive';\r\nimport { NgFlowchartStepComponent } from './ng-flowchart-step/ng-flowchart-step.component';\r\n\r\n@NgModule({\r\n  declarations: [NgFlowchartCanvasDirective, NgFlowchartStepDirective, NgFlowchartStepComponent, NgFlowchartArrowComponent],\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  exports: [NgFlowchartCanvasDirective, NgFlowchartStepDirective, NgFlowchartStepComponent, NgFlowchartArrowComponent],\r\n  entryComponents: [\r\n    NgFlowchartStepComponent,\r\n    NgFlowchartArrowComponent\r\n  ]\r\n})\r\nexport class NgFlowchartModule { }\r\n","/*\r\n * Public API Surface of ng-flowchart\r\n */\r\n\r\nexport * from './lib/model/flow.model';\r\nexport * from './lib/ng-flowchart-canvas.directive';\r\nexport * from './lib/ng-flowchart-step-registry.service';\r\nexport * from './lib/services/options.service'\r\nexport * from './lib/ng-flowchart-step.directive';\r\nexport * from './lib/ng-flowchart-step/ng-flowchart-step.component';\r\nexport * from './lib/ng-flowchart-arrow/ng-flowchart-arrow.component';\r\nexport * from './lib/ng-flowchart.module';\r\n\r\n\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n\nexport {NgFlowchartCanvasService as ɵa} from './lib/ng-flowchart-canvas.service';\nexport {CanvasRendererService as ɵc} from './lib/services/canvas-renderer.service';\nexport {DropDataService as ɵb} from './lib/services/dropdata.service';\nexport {StepManagerService as ɵd} from './lib/services/step-manager.service';"]}